{"ast":null,"code":"import { ADD_RECIPE, DELETE_RECIPE, EDIT_RECIPE, LOGIN, LOGOUT, LOAD_USER, DELETE_ACCOUNT } from \"../actionType\"; //login switches to true, adds user info into the state\n//login switches to false, gets rid of all user info\n//delete will get rid of all user info on app and database\n//AXIOS DOES NOT GO HERE, DATA WILL BE RECEIVED FROM THE PAYLOAD\n\nconst initialState = {\n  user: 'email@email.com',\n  logged_in: false,\n  recipes: [{\n    name: 'bread',\n    prep_time: '5:00',\n    cook_time: '30 minutes',\n    ingredients: ['flour', '3 bananas', 'walnuts'],\n    directions: ['step 1', 'step 2', 'step 3']\n  }, {\n    name: 'cookies',\n    prep_time: '5:00',\n    cook_time: '30 minutes',\n    ingredients: ['flour', '3 bananas', 'walnuts'],\n    directions: ['step 1', 'step 2', 'step 3']\n  }, {\n    name: 'muffin',\n    prep_time: '5:00',\n    cook_time: '30 minutes',\n    ingredients: ['flour', '3 bananas', 'walnuts'],\n    directions: ['step 1', 'step 2', 'step 3']\n  }, {\n    name: 'muffin2',\n    prep_time: '5:00',\n    cook_time: '30 minutes',\n    ingredients: ['flour', '3 bananas', 'walnuts'],\n    directions: ['step 1', 'step 2', 'step 3']\n  }]\n}; //we need to make async calls to the database eventually\n\nconst recipes = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_RECIPE:\n      {\n        return { ...state,\n          recipes: [...state.recipes, action.recipe]\n        };\n      }\n\n    case DELETE_RECIPE:\n      {\n        return { ...state,\n          recipes: state.recipes.slice(action.index - 1, action.index).concat(state.recipes.slice(action.index + 1))\n        };\n      }\n\n    case EDIT_RECIPE:\n      {\n        //look at the recipe, slice at that point, concat previous point with edit point with end point\n        console.log('editing');\n        console.log(action.recipe);\n        console.log(state.recipes);\n        return { ...state,\n          recipes: state.recipes.slice(action.index - 1, action.index).concat(action.recipe).concat(state.recipes.slice(action.index + 1))\n        };\n      }\n\n    case LOGIN:\n      {\n        if (action.payload.status) {\n          console.log('success'); //set the token\n\n          localStorage.setItem(\"token\", action.payload.acessToken);\n          console.log(\"token has been set \" + action.payload.acessToken);\n          return { ...state,\n            logged_in: true\n          };\n        } else {\n          console.log(\"can't login\");\n          return {\n            state\n          };\n        }\n      }\n\n    case LOAD_USER:\n      {\n        console.log(\"we are loading the user info\");\n        console.log(action.payload);\n        return { ...state\n        };\n      }\n\n    case SIGNUP:\n      {\n        console.log('will signup user');\n        console.log(action.payload);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default recipes;","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/recipe-keeps/client/src/redux/reducers/index.js"],"names":["ADD_RECIPE","DELETE_RECIPE","EDIT_RECIPE","LOGIN","LOGOUT","LOAD_USER","DELETE_ACCOUNT","initialState","user","logged_in","recipes","name","prep_time","cook_time","ingredients","directions","state","action","type","recipe","slice","index","concat","console","log","payload","status","localStorage","setItem","acessToken","SIGNUP"],"mappings":"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","sourcesContent":["import { ADD_RECIPE, DELETE_RECIPE, EDIT_RECIPE, LOGIN, LOGOUT, LOAD_USER, DELETE_ACCOUNT } from \"../actionType\";\r\n\r\n//login switches to true, adds user info into the state\r\n//login switches to false, gets rid of all user info\r\n//delete will get rid of all user info on app and database\r\n\r\n\r\n//AXIOS DOES NOT GO HERE, DATA WILL BE RECEIVED FROM THE PAYLOAD\r\n\r\nconst initialState = {\r\n  user: 'email@email.com',\r\n  logged_in: false,\r\n  recipes: [{\r\n      name:'bread',\r\n      prep_time: '5:00',\r\n      cook_time: '30 minutes',\r\n      ingredients: ['flour', '3 bananas', 'walnuts'],\r\n      directions: ['step 1','step 2', 'step 3']\r\n    },\r\n   {\r\n    name:'cookies',\r\n    prep_time: '5:00',\r\n    cook_time: '30 minutes',\r\n    ingredients: ['flour', '3 bananas', 'walnuts'],\r\n    directions: ['step 1','step 2', 'step 3']\r\n    },\r\n    {\r\n      name:'muffin',\r\n      prep_time: '5:00',\r\n      cook_time: '30 minutes',\r\n      ingredients: ['flour', '3 bananas', 'walnuts'],\r\n      directions: ['step 1','step 2', 'step 3']\r\n      },\r\n      {\r\n        name:'muffin2',\r\n        prep_time: '5:00',\r\n        cook_time: '30 minutes',\r\n        ingredients: ['flour', '3 bananas', 'walnuts'],\r\n        directions: ['step 1','step 2', 'step 3']\r\n        }]\r\n};\r\n\r\n//we need to make async calls to the database eventually\r\n\r\nconst recipes = (state = initialState, action) =>{\r\n  switch (action.type) {\r\n    case ADD_RECIPE: {\r\n      return{\r\n        ...state,\r\n        recipes: [...state.recipes, action.recipe]\r\n      }\r\n    }\r\n\r\n    case DELETE_RECIPE:{\r\n      return{\r\n        ...state,\r\n        recipes: state.recipes.slice(action.index-1, action.index).concat(state.recipes.slice(action.index+1))\r\n      }\r\n    }\r\n\r\n    case EDIT_RECIPE:{\r\n      //look at the recipe, slice at that point, concat previous point with edit point with end point\r\n      console.log('editing');\r\n      console.log(action.recipe);\r\n      console.log(state.recipes);\r\n      return{\r\n        ...state,\r\n        recipes: state.recipes.slice(action.index-1, action.index).concat(action.recipe).concat(state.recipes.slice(action.index+1))\r\n      }\r\n    }\r\n\r\n\r\n    case LOGIN:{\r\n      if(action.payload.status){\r\n        console.log('success');\r\n        //set the token\r\n        localStorage.setItem(\"token\", action.payload.acessToken);\r\n        console.log(\"token has been set \"+action.payload.acessToken);\r\n        return {...state, logged_in:true}\r\n      }\r\n      else{\r\n        console.log(\"can't login\");\r\n        return {state}\r\n      }\r\n    }\r\n\r\n    case LOAD_USER:{\r\n      console.log(\"we are loading the user info\");\r\n      console.log(action.payload);\r\n      return {...state}\r\n    }\r\n\r\n    case SIGNUP:{\r\n      console.log('will signup user');\r\n      console.log(action.payload);\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default recipes;"]},"metadata":{},"sourceType":"module"}