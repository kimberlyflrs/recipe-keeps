{"ast":null,"code":"import { ADD_RECIPE, DELETE_RECIPE, EDIT_RECIPE, LOGIN, LOGOUT, DELETE_ACCOUNT, LOAD_USER, LOAD_INFO, SIGNUP } from './actionType';\nimport axios from 'axios';\nimport setAuth from '../utils/setAuth.js';\n\nfunction auth() {\n  if (localStorage.token) {\n    setAuth(localStorage.token);\n  }\n}\n\nexport const userInfo = () => async dispatch => {\n  //loads the user info (name, food entries)\n  console.log('we are getting the user info rn');\n\n  try {\n    const res = await axios.get('/login', {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    dispatch({\n      type: LOAD_USER,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  //checks if there is a user with that credential\n  try {\n    const res = await axios.post('/login', {\n      \"email\": email,\n      \"password\": password\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    dispatch({\n      type: LOGIN,\n      payload: res.data\n    });\n    auth(); //add authorization errors\n  } catch (error) {\n    console.log('error caught in action.js');\n  }\n};\nexport const signup = (name, email, password) => async dispatch => {\n  //checks if there is a user with that credential\n  try {\n    const res = await axios.post('/signup', {\n      \"name\": name,\n      \"email\": email,\n      \"password\": password\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    dispatch({\n      type: SIGNUP,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log('error caught in action.js');\n  }\n};\nexport const resume = () => async dispatch => {\n  //checks if there is a user with that credential\n  try {\n    const res = await axios.post('/verify', {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    dispatch({\n      type: LOGIN,\n      payload: res.data\n    });\n    auth(); //add authorization errors\n  } catch (error) {\n    console.log('error caught in action.js');\n  }\n};\nexport const logout = () => ({\n  type: LOGOUT\n});\nexport const deleteAccount = () => ({\n  type: DELETE_ACCOUNT\n});\nexport const addRecipe = recipe => ({\n  type: ADD_RECIPE,\n  recipe: recipe\n});\nexport const deleteRecipe = index => ({\n  type: DELETE_RECIPE,\n  index: index\n});\nexport const editRecipe = (recipe, index) => ({\n  type: EDIT_RECIPE,\n  recipe: recipe,\n  index: index\n});","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/recipe-keeps/client/src/redux/actions.js"],"names":["ADD_RECIPE","DELETE_RECIPE","EDIT_RECIPE","LOGIN","LOGOUT","DELETE_ACCOUNT","LOAD_USER","LOAD_INFO","SIGNUP","axios","setAuth","auth","localStorage","token","userInfo","dispatch","console","log","res","get","headers","type","payload","data","err","login","email","password","post","error","signup","name","resume","logout","deleteAccount","addRecipe","recipe","deleteRecipe","index","editRecipe"],"mappings":"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","sourcesContent":["import { ADD_RECIPE, DELETE_RECIPE, EDIT_RECIPE, LOGIN, LOGOUT, DELETE_ACCOUNT, LOAD_USER, LOAD_INFO, SIGNUP} from './actionType';\r\nimport axios from 'axios';\r\nimport setAuth from '../utils/setAuth.js';\r\n\r\nfunction auth(){\r\n    if(localStorage.token){\r\n        setAuth(localStorage.token);\r\n    }\r\n}\r\n\r\n\r\nexport const userInfo = () => async dispatch =>{\r\n    //loads the user info (name, food entries)\r\n    console.log('we are getting the user info rn');\r\n    try{\r\n        const res =  await axios.get('/login', \r\n        {headers: {\r\n            'Content-Type': 'application/json'}\r\n        });\r\n        dispatch({\r\n            type: LOAD_USER,\r\n            payload: res.data\r\n            });\r\n    }\r\n    catch(err){\r\n            console.log(err);\r\n    } \r\n}\r\n\r\n\r\n\r\nexport const login = (email, password) => async dispatch =>{\r\n    //checks if there is a user with that credential\r\n\r\n    try {\r\n        const res = await axios.post('/login', \r\n        {\"email\": email,\r\n         \"password\": password},\r\n        {headers: {'Content-Type': 'application/json'}}   \r\n        );\r\n        dispatch({\r\n            type: LOGIN,\r\n            payload: res.data\r\n        });\r\n\r\n        auth();//add authorization errors\r\n    } \r\n    catch (error) {\r\n        console.log('error caught in action.js');\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const signup = (name, email, password) => async dispatch =>{\r\n    //checks if there is a user with that credential\r\n\r\n    try {\r\n        const res = await axios.post('/signup', \r\n        {\"name\":name,\r\n        \"email\": email,\r\n         \"password\": password},\r\n        {headers: {'Content-Type': 'application/json'}}   \r\n        );\r\n        dispatch({\r\n            type: SIGNUP,\r\n            payload: res.data\r\n        });\r\n\r\n    } \r\n    catch (error) {\r\n        console.log('error caught in action.js');\r\n    }\r\n}\r\n\r\n\r\nexport const resume = () => async dispatch =>{\r\n    //checks if there is a user with that credential\r\n\r\n    try {\r\n        const res = await axios.post('/verify',\r\n        {headers: {'Content-Type': 'application/json'}}   \r\n        );\r\n        dispatch({\r\n            type: LOGIN,\r\n            payload: res.data\r\n        });\r\n\r\n        auth();//add authorization errors\r\n    } \r\n    catch (error) {\r\n        console.log('error caught in action.js');\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const logout = () => ({\r\n    type: LOGOUT\r\n})\r\n\r\n\r\n\r\n\r\nexport const deleteAccount = () => ({\r\n    type: DELETE_ACCOUNT\r\n})\r\n\r\n\r\n\r\nexport const addRecipe = (recipe) => ({\r\n    type: ADD_RECIPE,\r\n    recipe: recipe\r\n})\r\n\r\nexport const deleteRecipe = (index) => ({\r\n    type: DELETE_RECIPE,\r\n    index: index\r\n})\r\n\r\nexport const editRecipe = (recipe, index) => ({\r\n    type: EDIT_RECIPE,\r\n    recipe:recipe,\r\n    index: index\r\n})"]},"metadata":{},"sourceType":"module"}