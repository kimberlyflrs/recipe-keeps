{"ast":null,"code":"import { ADD_RECIPE, DELETE_RECIPE, EDIT_RECIPE, LOGIN, LOGOUT, LOAD_USER, DELETE_ACCOUNT, SIGNUP } from \"../actionType\"; //login switches to true, adds user info into the state\n//login switches to false, gets rid of all user info\n//AXIOS DOES NOT GO HERE, DATA WILL BE RECEIVED FROM THE PAYLOAD\n\nconst initialState = {\n  logged_in: false,\n  registered: false,\n  added: false,\n  recipes: []\n};\n\nconst recipes = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_RECIPE:\n      {\n        //if things went well true\n        if (action.payload.status) {\n          return { ...state,\n            added: true,\n            recipes: [...state.recipes, action.payload.recipe]\n          };\n        } else {\n          console.log(\"recipe error\");\n          return {\n            state\n          };\n        }\n      }\n\n    case DELETE_RECIPE:\n      {\n        return { ...state,\n          recipes: state.recipes.slice(action.index - 1, action.index).concat(state.recipes.slice(action.index + 1))\n        };\n      }\n\n    case EDIT_RECIPE:\n      {\n        //look at the recipe, slice at that point, concat previous point with edit point with end point\n        console.log('editing');\n        console.log(action.recipe);\n        console.log(state.recipes);\n        return { ...state,\n          recipes: state.recipes.slice(action.index - 1, action.index).concat(action.recipe).concat(state.recipes.slice(action.index + 1))\n        };\n      }\n\n    case LOGIN:\n      {\n        if (action.payload.status) {\n          console.log('success'); //set the token\n\n          localStorage.setItem(\"token\", action.payload.acessToken);\n          console.log(\"token has been set \" + action.payload.acessToken);\n          return { ...state,\n            logged_in: true\n          };\n        } else {\n          console.log(\"can't login\");\n          return {\n            state\n          };\n        }\n      }\n\n    case LOGOUT:\n      {\n        //remove the token, sets all user info blank\n        localStorage.removeItem(\"token\");\n        return { ...state,\n          logged_in: false,\n          registered: false,\n          added: false,\n          recipes: []\n        };\n      }\n\n    case LOAD_USER:\n      {\n        //sets the recipe entries into state.recipes\n        console.log(\"Loading user information\");\n        console.log(action.payload.message);\n        return { ...state,\n          recipes: action.payload.message\n        };\n      }\n\n    case SIGNUP:\n      {\n        //sets registered to true\n        if (action.payload.status) {\n          return { ...state,\n            registered: true\n          };\n        }\n\n        return {\n          state\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default recipes;","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/recipe-keeps/client/src/redux/reducers/index.js"],"names":["ADD_RECIPE","DELETE_RECIPE","EDIT_RECIPE","LOGIN","LOGOUT","LOAD_USER","DELETE_ACCOUNT","SIGNUP","initialState","logged_in","registered","added","recipes","state","action","type","payload","status","recipe","console","log","slice","index","concat","localStorage","setItem","acessToken","removeItem","message"],"mappings":"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","sourcesContent":["import { ADD_RECIPE, DELETE_RECIPE, EDIT_RECIPE, LOGIN, LOGOUT, LOAD_USER, DELETE_ACCOUNT, SIGNUP } from \"../actionType\";\r\n\r\n//login switches to true, adds user info into the state\r\n//login switches to false, gets rid of all user info\r\n\r\n//AXIOS DOES NOT GO HERE, DATA WILL BE RECEIVED FROM THE PAYLOAD\r\n\r\nconst initialState = {\r\n  logged_in: false,\r\n  registered: false,\r\n  added: false,\r\n  recipes: []\r\n};\r\n\r\n\r\nconst recipes = (state = initialState, action) =>{\r\n  switch (action.type) {\r\n    case ADD_RECIPE: {\r\n      //if things went well true\r\n      if(action.payload.status){\r\n        return{\r\n          ...state,\r\n          added:true,\r\n          recipes: [...state.recipes, action.payload.recipe]\r\n        }       \r\n      }\r\n      else{\r\n        console.log(\"recipe error\");\r\n        return {state}\r\n      }\r\n    }\r\n\r\n    case DELETE_RECIPE:{\r\n      return{\r\n        ...state,\r\n        recipes: state.recipes.slice(action.index-1, action.index).concat(state.recipes.slice(action.index+1))\r\n      }\r\n    }\r\n\r\n    case EDIT_RECIPE:{\r\n      //look at the recipe, slice at that point, concat previous point with edit point with end point\r\n      console.log('editing');\r\n      console.log(action.recipe);\r\n      console.log(state.recipes);\r\n      return{\r\n        ...state,\r\n        recipes: state.recipes.slice(action.index-1, action.index).concat(action.recipe).concat(state.recipes.slice(action.index+1))\r\n      }\r\n    }\r\n\r\n\r\n    case LOGIN:{\r\n      if(action.payload.status){\r\n        console.log('success');\r\n        //set the token\r\n        localStorage.setItem(\"token\", action.payload.acessToken);\r\n        console.log(\"token has been set \"+action.payload.acessToken);\r\n        return {...state, logged_in:true}\r\n      }\r\n      else{\r\n        console.log(\"can't login\");\r\n        return {state}\r\n      }\r\n    }\r\n\r\n\r\n    case LOGOUT:{\r\n        //remove the token, sets all user info blank\r\n        localStorage.removeItem(\"token\");\r\n        return {...state, logged_in:false, registered: false, added:false, recipes:[]}\r\n    }\r\n\r\n  \r\n\r\n    case LOAD_USER:{\r\n      //sets the recipe entries into state.recipes\r\n      console.log(\"Loading user information\");\r\n      console.log(action.payload.message);\r\n      return {...state, recipes:action.payload.message}\r\n    }\r\n\r\n    case SIGNUP:{\r\n      //sets registered to true\r\n      if(action.payload.status){\r\n        return {...state, registered:true}\r\n      }\r\n      return {state}\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default recipes;"]},"metadata":{},"sourceType":"module"}