{"ast":null,"code":"import { ADD_RECIPE, DELETE_RECIPE, EDIT_RECIPE, LOGIN, LOGOUT, DELETE_ACCOUNT, LOAD_USER, SIGNUP, VERIFY, IS_LOADING, ERROR } from './actionType';\nimport axios from 'axios';\nimport setAuth from '../utils/setAuth.js';\n\nfunction auth() {\n  setAuth(localStorage.token);\n}\n/*\r\n* User login and sign up\r\n*/\n//Login\n\n\nexport const login = (email, password) => async dispatch => {\n  try {\n    const res = await axios.post('/api/auth/login', {\n      \"email\": email,\n      \"password\": password\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    dispatch({\n      type: LOGIN,\n      payload: res.data\n    });\n    auth(); //add authorization\n  } catch (error) {\n    //add error dispatch\n    dispatch({\n      type: ERROR,\n      payload: \"Cannot Login At This Time. Try Again.\"\n    });\n  }\n}; //Sign up for new user\n\nexport const signup = (email, password) => async dispatch => {\n  try {\n    const res = await axios.post('/api/auth/signup', {\n      \"email\": email,\n      \"password\": password\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    dispatch({\n      type: SIGNUP,\n      payload: res.data\n    });\n  } catch (error) {\n    //dispatch error\n    console.log('error caught in action.js');\n    dispatch({\n      type: ERROR,\n      payload: \"Cannot Signup At This Time. Try Again.\"\n    });\n  }\n};\n/*\r\n* User info and verification\r\n*/\n//Checks if token is valid\n\nexport const resume = () => dispatch => {\n  //checks if crendentials are valid\n  console.log('resume');\n  const token = localStorage.getItem('token');\n  axios.post('/api/auth/verify', {\n    token: token\n  }, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(result => {\n    dispatch({\n      type: VERIFY,\n      payload: result.data\n    });\n    auth();\n  }).catch(error => {\n    console.log(error);\n  });\n}; //Loads the user info\n\nexport const userInfo = () => async dispatch => {\n  console.log('we are getting the user info rn');\n\n  if (localStorage.token) {\n    setAuth(localStorage.token);\n  }\n\n  try {\n    console.log('inside api call');\n    const res = await axios.get('/api/foodentries/entries', {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    dispatch({\n      type: LOAD_USER,\n      payload: res.data\n    });\n  } catch (err) {\n    //dispatch erro\n    console.log(err);\n    dispatch({\n      type: ERROR,\n      message: \"Cannot Get Recipes At This Time. Try Again.\"\n    });\n  }\n};\n/* \r\n* MODIFYING A RECIPE SECTION\r\n*/\n//Adds an existing Recipe\n\nexport const addRecipe = formdata => async dispatch => {\n  try {\n    const res = await axios.post('/api/foodentries/add', formdata);\n    console.log(res.data);\n    dispatch({\n      type: ADD_RECIPE,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log('error caught in action.js'); //dispatch error here\n\n    dispatch({\n      type: ERROR,\n      payload: \"Cannot Add Recipe At This Time. Try Again.\"\n    });\n  }\n}; //Deletes an existing Recipe\n\nexport const deleteRecipe = (id, index, imageKey) => async dispatch => {\n  try {\n    const res = await axios.post('/api/foodentries/delete', {\n      id: id,\n      imageKey: imageKey\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    dispatch({\n      type: DELETE_RECIPE,\n      index: index,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error); //dispatch error here\n\n    dispatch({\n      type: ERROR,\n      message: \"Cannot Delete Recipe At This Time. Try Again.\"\n    });\n  }\n}; //Edits an Existing Recipe\n\nexport const editRecipe = (recipe, index) => async dispatch => {\n  try {\n    const res = await axios.post('/api/foodentries/edit', recipe);\n    dispatch({\n      type: EDIT_RECIPE,\n      recipe: recipe,\n      index: index,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error); //dispatch error here\n\n    dispatch({\n      type: ERROR,\n      message: \"Not Able To Connect to Server At This Time. Try Again.\"\n    });\n  }\n};\n/*\r\n* LOGOUT\r\n*/\n//Logs the user out\n\nexport const logout = () => async (dispatch) => dispatch({\n  type: LOGOUT\n});\n/*\r\n* LOADING\r\n*/\n\nexport const loading = () => dispatch => {\n  dispatch({\n    type: IS_LOADING\n  });\n};","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/recipe-keeps/client/src/redux/actions.js"],"names":["ADD_RECIPE","DELETE_RECIPE","EDIT_RECIPE","LOGIN","LOGOUT","DELETE_ACCOUNT","LOAD_USER","SIGNUP","VERIFY","IS_LOADING","ERROR","axios","setAuth","auth","localStorage","token","login","email","password","dispatch","res","post","headers","type","payload","data","error","signup","console","log","resume","getItem","then","result","catch","userInfo","get","err","message","addRecipe","formdata","deleteRecipe","id","index","imageKey","editRecipe","recipe","logout","loading"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,aAArB,EAAoCC,WAApC,EAAiDC,KAAjD,EAAwDC,MAAxD,EAAgEC,cAAhE,EAAgFC,SAAhF,EAA2FC,MAA3F,EAAmGC,MAAnG,EAA2GC,UAA3G,EAAuHC,KAAvH,QAAmI,cAAnI;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,SAASC,IAAT,GAAe;AACXD,EAAAA,OAAO,CAACE,YAAY,CAACC,KAAd,CAAP;AACH;AAED;;;AAIA;;;AACA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMC,QAAN,IAAiB;AACvD,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,iBAAX,EAClB;AAAC,eAASJ,KAAV;AACC,kBAAYC;AADb,KADkB,EAGlB;AAACI,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAAV,KAHkB,CAAlB;AAKAH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEpB,KADD;AAELqB,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFR,KAAD,CAAR;AAIAZ,IAAAA,IAAI,GAVJ,CAUO;AACV,GAXD,CAYA,OAAOa,KAAP,EAAc;AACV;AACAP,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEb,KADD;AAELc,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH;AACJ,CApBM,C,CAwBP;;AACA,OAAO,MAAMG,MAAM,GAAG,CAACV,KAAD,EAAQC,QAAR,KAAqB,MAAMC,QAAN,IAAiB;AACxD,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,kBAAX,EAClB;AAAC,eAASJ,KAAV;AACC,kBAAYC;AADb,KADkB,EAGlB;AAACI,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAAV,KAHkB,CAAlB;AAKAH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEhB,MADD;AAELiB,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFR,KAAD,CAAR;AAIH,GAVD,CAWA,OAAOC,KAAP,EAAc;AACV;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAV,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEb,KADD;AAELc,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH;AACJ,CApBM;AAyBP;;;AAMA;;AACA,OAAO,MAAMM,MAAM,GAAG,MAAMX,QAAQ,IAAG;AACnC;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,QAAMd,KAAK,GAAGD,YAAY,CAACiB,OAAb,CAAqB,OAArB,CAAd;AACApB,EAAAA,KAAK,CAACU,IAAN,CAAW,kBAAX,EACI;AAACN,IAAAA,KAAK,EAAEA;AAAR,GADJ,EAEI;AAACO,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB;AAAV,GAFJ,EAGMU,IAHN,CAGWC,MAAM,IAAE;AACXd,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEf,MADD;AAELgB,MAAAA,OAAO,EAAES,MAAM,CAACR;AAFX,KAAD,CAAR;AAIAZ,IAAAA,IAAI;AACP,GATL,EASOqB,KATP,CASaR,KAAK,IAAE;AACZE,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACH,GAXL;AAaH,CAjBM,C,CAoBP;;AACA,OAAO,MAAMS,QAAQ,GAAG,MAAM,MAAMhB,QAAN,IAAiB;AAC3CS,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;;AACA,MAAGf,YAAY,CAACC,KAAhB,EAAsB;AAClBH,IAAAA,OAAO,CAACE,YAAY,CAACC,KAAd,CAAP;AACH;;AACD,MAAG;AACCa,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,UAAMT,GAAG,GAAI,MAAMT,KAAK,CAACyB,GAAN,CAAU,0BAAV,EACnB;AAACd,MAAAA,OAAO,EAAE;AACN,wBAAgB;AADV;AAAV,KADmB,CAAnB;AAIAH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEjB,SADD;AAELkB,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFR,KAAD,CAAR;AAIH,GAVD,CAWA,OAAMY,GAAN,EAAU;AACN;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACAlB,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEb,KADD;AAEL4B,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH;AACJ,CAxBM;AA6BP;;;AAKA;;AACA,OAAO,MAAMC,SAAS,GAAIC,QAAD,IAAc,MAAMrB,QAAN,IAAiB;AACpD,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,sBAAX,EAClBmB,QADkB,CAAlB;AAGAZ,IAAAA,OAAO,CAACC,GAAR,CAAYT,GAAG,CAACK,IAAhB;AACAN,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEvB,UADD;AAELwB,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFR,KAAD,CAAR;AAIH,GATD,CAUA,OAAOC,KAAP,EAAc;AACVE,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EADU,CAEV;;AACAV,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEb,KADD;AAELc,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH;AACJ,CAnBM,C,CAsBP;;AACA,OAAO,MAAMiB,YAAY,GAAG,CAACC,EAAD,EAAKC,KAAL,EAAYC,QAAZ,KAAyB,MAAMzB,QAAN,IAAiB;AAClE,MAAG;AACC,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,yBAAX,EAClB;AAACqB,MAAAA,EAAE,EAAEA,EAAL;AACAE,MAAAA,QAAQ,EAAEA;AADV,KADkB,EAGlB;AAACtB,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAAV,KAHkB,CAAlB;AAKAH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEtB,aADD;AAEL0C,MAAAA,KAAK,EAAEA,KAFF;AAGLnB,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAHR,KAAD,CAAR;AAKH,GAXD,CAYA,OAAMC,KAAN,EAAY;AACRE,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EADQ,CAER;;AACAP,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEb,KADD;AAEL4B,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH;AACJ,CArBM,C,CAwBP;;AACA,OAAO,MAAMO,UAAU,GAAG,CAACC,MAAD,EAASH,KAAT,KAAmB,MAAMxB,QAAN,IAAiB;AAC1D,MAAG;AACC,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,uBAAX,EAClByB,MADkB,CAAlB;AAGA3B,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAErB,WAAP;AACL4C,MAAAA,MAAM,EAACA,MADF;AAELH,MAAAA,KAAK,EAAEA,KAFF;AAGLnB,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAHR,KAAD,CAAR;AAKH,GATD,CAUA,OAAMC,KAAN,EAAY;AACRE,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EADQ,CAER;;AACAP,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEb,KADD;AAEL4B,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH;AACJ,CAnBM;AAsBP;;;AAKA;;AACA,OAAO,MAAMS,MAAM,GAAG,MAAM,OAAM5B,QAAN,KACxBA,QAAQ,CAAC;AACTI,EAAAA,IAAI,EAAEnB;AADG,CAAD,CADL;AAQP;;;;AAIA,OAAO,MAAM4C,OAAO,GAAC,MAAI7B,QAAQ,IAAE;AAC/BA,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAAEd;AADD,GAAD,CAAR;AAGH,CAJM","sourcesContent":["import { ADD_RECIPE, DELETE_RECIPE, EDIT_RECIPE, LOGIN, LOGOUT, DELETE_ACCOUNT, LOAD_USER, SIGNUP, VERIFY, IS_LOADING, ERROR} from './actionType';\r\nimport axios from 'axios';\r\nimport setAuth from '../utils/setAuth.js';\r\n\r\nfunction auth(){\r\n    setAuth(localStorage.token);\r\n}\r\n\r\n/*\r\n* User login and sign up\r\n*/\r\n\r\n//Login\r\nexport const login = (email, password) => async dispatch =>{\r\n    try {\r\n        const res = await axios.post('/api/auth/login', \r\n        {\"email\": email,\r\n         \"password\": password},\r\n        {headers: {'Content-Type': 'application/json'}}   \r\n        );\r\n        dispatch({\r\n            type: LOGIN,\r\n            payload: res.data\r\n        });\r\n        auth();//add authorization\r\n    } \r\n    catch (error) {\r\n        //add error dispatch\r\n        dispatch({\r\n            type: ERROR,\r\n            payload: \"Cannot Login At This Time. Try Again.\"\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n//Sign up for new user\r\nexport const signup = (email, password) => async dispatch =>{\r\n    try {\r\n        const res = await axios.post('/api/auth/signup', \r\n        {\"email\": email,\r\n         \"password\": password},\r\n        {headers: {'Content-Type': 'application/json'}}   \r\n        );\r\n        dispatch({\r\n            type: SIGNUP,\r\n            payload: res.data\r\n        });\r\n    } \r\n    catch (error) {\r\n        //dispatch error\r\n        console.log('error caught in action.js');\r\n        dispatch({\r\n            type: ERROR,\r\n            payload: \"Cannot Signup At This Time. Try Again.\"\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\n* User info and verification\r\n*/\r\n\r\n\r\n\r\n//Checks if token is valid\r\nexport const resume = () => dispatch =>{\r\n    //checks if crendentials are valid\r\n    console.log('resume');\r\n    const token = localStorage.getItem('token');\r\n    axios.post('/api/auth/verify',\r\n        {token: token},\r\n        {headers: {'Content-Type': 'application/json'}}   \r\n        ).then(result=>{\r\n            dispatch({\r\n                type: VERIFY,\r\n                payload: result.data\r\n            });\r\n            auth();\r\n        }).catch(error=>{\r\n            console.log(error);\r\n        })\r\n\r\n}\r\n\r\n\r\n//Loads the user info\r\nexport const userInfo = () => async dispatch =>{\r\n    console.log('we are getting the user info rn');\r\n    if(localStorage.token){\r\n        setAuth(localStorage.token);\r\n    }\r\n    try{\r\n        console.log('inside api call');\r\n        const res =  await axios.get('/api/foodentries/entries', \r\n        {headers: {\r\n            'Content-Type': 'application/json'}\r\n        })\r\n        dispatch({\r\n            type: LOAD_USER,\r\n            payload: res.data\r\n            });\r\n    }\r\n    catch(err){\r\n        //dispatch erro\r\n        console.log(err);\r\n        dispatch({\r\n            type: ERROR,\r\n            message: \"Cannot Get Recipes At This Time. Try Again.\"\r\n        })\r\n    } \r\n}\r\n\r\n\r\n\r\n\r\n/* \r\n* MODIFYING A RECIPE SECTION\r\n*/\r\n\r\n\r\n//Adds an existing Recipe\r\nexport const addRecipe = (formdata) => async dispatch =>{\r\n    try {\r\n        const res = await axios.post('/api/foodentries/add',\r\n        formdata   \r\n        );\r\n        console.log(res.data);\r\n        dispatch({\r\n            type: ADD_RECIPE,\r\n            payload: res.data\r\n        });\r\n    } \r\n    catch (error) {\r\n        console.log('error caught in action.js');\r\n        //dispatch error here\r\n        dispatch({\r\n            type: ERROR,\r\n            payload: \"Cannot Add Recipe At This Time. Try Again.\"\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//Deletes an existing Recipe\r\nexport const deleteRecipe = (id, index, imageKey) => async dispatch =>{\r\n    try{\r\n        const res = await axios.post('/api/foodentries/delete',\r\n        {id: id,\r\n        imageKey: imageKey},\r\n        {headers: {'Content-Type': 'application/json'}},        \r\n        );\r\n        dispatch({\r\n            type: DELETE_RECIPE,\r\n            index: index,\r\n            payload: res.data\r\n            })\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n        //dispatch error here\r\n        dispatch({\r\n            type: ERROR,\r\n            message: \"Cannot Delete Recipe At This Time. Try Again.\"\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//Edits an Existing Recipe\r\nexport const editRecipe = (recipe, index) => async dispatch =>{\r\n    try{\r\n        const res = await axios.post('/api/foodentries/edit',\r\n        recipe        \r\n        )\r\n        dispatch({type: EDIT_RECIPE,\r\n            recipe:recipe,\r\n            index: index,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n        //dispatch error here\r\n        dispatch({\r\n            type: ERROR,\r\n            message: \"Not Able To Connect to Server At This Time. Try Again.\"\r\n        })\r\n    }\r\n}\r\n\r\n\r\n/*\r\n* LOGOUT\r\n*/\r\n\r\n\r\n//Logs the user out\r\nexport const logout = () => async dispatch => (\r\n    dispatch({\r\n    type: LOGOUT\r\n    })\r\n)\r\n\r\n\r\n\r\n/*\r\n* LOADING\r\n*/\r\n\r\nexport const loading=()=>dispatch=>{\r\n    dispatch({\r\n        type: IS_LOADING\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}