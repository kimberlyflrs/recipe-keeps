{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = handleAction;\n\nfunction isFunction(val) {\n  return typeof val === 'function';\n}\n\nfunction handleAction(type, reducers, defaultState) {\n  var typeValue = isFunction(type) ? type.toString() : type;\n  return function () {\n    var state = arguments.length <= 0 || arguments[0] === undefined ? defaultState : arguments[0];\n    var action = arguments[1]; // If action type does not match, return previous state\n\n    if (action.type !== typeValue) return state;\n    var handlerKey = action.error === true ? 'throw' : 'next'; // If function is passed instead of map, use as reducer\n\n    if (isFunction(reducers)) {\n      reducers.next = reducers.throw = reducers;\n    } // Otherwise, assume an action map was passed\n\n\n    var reducer = reducers[handlerKey];\n    return isFunction(reducer) ? reducer(state, action) : state;\n  };\n}","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/recipe-keeps/client/node_modules/redux-actions/lib/handleAction.js"],"names":["Object","defineProperty","exports","value","default","handleAction","isFunction","val","type","reducers","defaultState","typeValue","toString","state","arguments","length","undefined","action","handlerKey","error","next","throw","reducer"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,YAAlB;;AACA,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AACvB,SAAO,OAAOA,GAAP,KAAe,UAAtB;AACD;;AAED,SAASF,YAAT,CAAsBG,IAAtB,EAA4BC,QAA5B,EAAsCC,YAAtC,EAAoD;AAClD,MAAIC,SAAS,GAAGL,UAAU,CAACE,IAAD,CAAV,GAAmBA,IAAI,CAACI,QAAL,EAAnB,GAAqCJ,IAArD;AAEA,SAAO,YAAY;AACjB,QAAIK,KAAK,GAAGC,SAAS,CAACC,MAAV,IAAoB,CAApB,IAAyBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAA1C,GAAsDN,YAAtD,GAAqEI,SAAS,CAAC,CAAD,CAA1F;AACA,QAAIG,MAAM,GAAGH,SAAS,CAAC,CAAD,CAAtB,CAFiB,CAIjB;;AACA,QAAIG,MAAM,CAACT,IAAP,KAAgBG,SAApB,EAA+B,OAAOE,KAAP;AAE/B,QAAIK,UAAU,GAAGD,MAAM,CAACE,KAAP,KAAiB,IAAjB,GAAwB,OAAxB,GAAkC,MAAnD,CAPiB,CASjB;;AACA,QAAIb,UAAU,CAACG,QAAD,CAAd,EAA0B;AACxBA,MAAAA,QAAQ,CAACW,IAAT,GAAgBX,QAAQ,CAACY,KAAT,GAAiBZ,QAAjC;AACD,KAZgB,CAcjB;;;AACA,QAAIa,OAAO,GAAGb,QAAQ,CAACS,UAAD,CAAtB;AAEA,WAAOZ,UAAU,CAACgB,OAAD,CAAV,GAAsBA,OAAO,CAACT,KAAD,EAAQI,MAAR,CAA7B,GAA+CJ,KAAtD;AACD,GAlBD;AAmBD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = handleAction;\nfunction isFunction(val) {\n  return typeof val === 'function';\n}\n\nfunction handleAction(type, reducers, defaultState) {\n  var typeValue = isFunction(type) ? type.toString() : type;\n\n  return function () {\n    var state = arguments.length <= 0 || arguments[0] === undefined ? defaultState : arguments[0];\n    var action = arguments[1];\n\n    // If action type does not match, return previous state\n    if (action.type !== typeValue) return state;\n\n    var handlerKey = action.error === true ? 'throw' : 'next';\n\n    // If function is passed instead of map, use as reducer\n    if (isFunction(reducers)) {\n      reducers.next = reducers.throw = reducers;\n    }\n\n    // Otherwise, assume an action map was passed\n    var reducer = reducers[handlerKey];\n\n    return isFunction(reducer) ? reducer(state, action) : state;\n  };\n}"]},"metadata":{},"sourceType":"script"}