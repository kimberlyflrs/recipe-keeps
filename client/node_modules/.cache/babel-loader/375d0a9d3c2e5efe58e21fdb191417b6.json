{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kim\\\\Documents\\\\GitHub\\\\recipe-keeps\\\\client\\\\src\\\\components\\\\Login.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login, userInfo } from '../redux/actions'; //Signup can only be accessed if there is no token\n\nclass Login extends React.Component {\n  constructor(props) {\n    super();\n\n    this.myLoginSubmit = event => {\n      //checks if inputs are not empty\n      event.preventDefault();\n      var email = document.forms[\"loginForm\"][\"email\"].value;\n      var pass = document.forms[\"loginForm\"][\"password\"].value;\n\n      if (email === \"\" || pass === \"\") {\n        alert(\"Field cannot be empty\");\n      } else {\n        this.login(email, pass);\n      }\n    };\n\n    this.state = {\n      new_user: false,\n      info_valid: false\n    };\n    this.newUser = this.newUser.bind(this);\n    this.login = this.login.bind(this);\n    this.myLoginSubmit = this.myLoginSubmit.bind(this);\n  }\n\n  newUser() {\n    //switches from login to signup\n    document.getElementById('email').value = '';\n    document.getElementById('password').value = '';\n\n    if (this.state.new_user) {\n      document.getElementById('confirmpassword').value = '';\n    }\n\n    this.setState({\n      new_user: !this.state.new_user\n    });\n  }\n\n  async login(email, password) {\n    console.log(\"here it's the login function\");\n    await this.props.login(email, password);\n  }\n\n  render() {\n    if (this.props.loggedIn) {\n      console.log(\"it's true! let go to view recipe\");\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/viewRecipes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 20\n        }\n      });\n    }\n\n    if (this.state.new_user) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/signup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"landingElement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"center error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, this.props.error), /*#__PURE__*/React.createElement(Form, {\n      name: \"loginForm\",\n      onSubmit: this.myLoginSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter Email\",\n      name: \"email\",\n      id: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"landing-space\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Enter Password\",\n      name: \"password\",\n      id: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-login\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, \"Login\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"link\",\n      onClick: () => this.newUser(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, \"New to RecipeKeeps? Sign Up\")));\n  }\n\n}\n\nconst mapDispatchToProps = {\n  login,\n  userInfo\n};\n\nconst mapStateToProps = state => ({\n  loggedIn: state.logged_in,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/recipe-keeps/client/src/components/Login.js"],"names":["React","Form","Button","Redirect","connect","login","userInfo","Login","Component","constructor","props","myLoginSubmit","event","preventDefault","email","document","forms","value","pass","alert","state","new_user","info_valid","newUser","bind","getElementById","setState","password","console","log","render","loggedIn","error","mapDispatchToProps","mapStateToProps","logged_in"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {login, userInfo} from '../redux/actions';\r\n\r\n//Signup can only be accessed if there is no token\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super()\r\n        this.state = {\r\n            new_user: false,\r\n            info_valid:false,\r\n        }\r\n        this.newUser = this.newUser.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.myLoginSubmit = this.myLoginSubmit.bind(this);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    newUser(){\r\n    //switches from login to signup\r\n        document.getElementById('email').value='';\r\n        document.getElementById('password').value='';\r\n        if(this.state.new_user){\r\n            document.getElementById('confirmpassword').value='';\r\n        }\r\n        this.setState({\r\n            new_user: !(this.state.new_user)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    async login(email, password){\r\n        console.log(\"here it's the login function\");\r\n        await this.props.login(email,password);\r\n    }\r\n\r\n\r\n\r\n\r\n    myLoginSubmit = (event) => {\r\n        //checks if inputs are not empty\r\n        event.preventDefault();\r\n        var email = document.forms[\"loginForm\"][\"email\"].value;\r\n        var pass = document.forms[\"loginForm\"][\"password\"].value;\r\n\r\n        if(email===\"\" || pass===\"\"){\r\n            alert(\"Field cannot be empty\");\r\n        }\r\n        else{\r\n            this.login(email,pass);\r\n        }\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n    render(){\r\n        if(this.props.loggedIn){\r\n            console.log(\"it's true! let go to view recipe\");\r\n            return <Redirect to=\"/viewRecipes\"/>\r\n        }\r\n        if (this.state.new_user){\r\n            return <Redirect to=\"/signup\"/>\r\n        }\r\n            return(\r\n                <div className=\"form\">\r\n                    <h1 className=\"landingElement\">Login</h1>\r\n                    <p className=\"center error\">{this.props.error}</p>\r\n                    <Form name=\"loginForm\" onSubmit={this.myLoginSubmit}>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter Email\" name=\"email\" id=\"email\"></Form.Control>\r\n\r\n\r\n                        <Form.Label className=\"landing-space\">Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Enter Password\" name=\"password\" id=\"password\"></Form.Control>\r\n\r\n                        <div className=\"center\">\r\n                        <Button className=\"btn-login\" type=\"submit\">Login</Button>\r\n                        </div>\r\n                    </Form>\r\n                    <div className=\"center\">\r\n                        <Button variant=\"link\" onClick={()=>this.newUser()}>New to RecipeKeeps? Sign Up</Button>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    login,\r\n    userInfo,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: state.logged_in,\r\n    error: state.error\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}