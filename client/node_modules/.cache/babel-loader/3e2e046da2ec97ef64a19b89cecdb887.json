{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kimberly Flores\\\\Documents\\\\GitHub\\\\recipe-keeps\\\\client\\\\src\\\\components\\\\RecipeForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addRecipe, deleteRecipe, editRecipe } from '../redux/actions';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Row from 'react-bootstrap/Row';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'; //Recipe Form can display edit mode and create a new recipe\n\nclass RecipeForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.mySubmitHandler = event => {\n      event.preventDefault();\n\n      if (this.state.name === \"\" || this.state.prep === \"\" || this.state.cook === \"\" || this.state.prep === \"\" || this.state.steps === \"\" || this.state.ingridients === \"\") {\n        alert(\"Field cannot be empty\");\n      } else {\n        var newRecipe = {\n          name: this.state.name,\n          prep: this.state.prep,\n          cook: this.state.cook,\n          ingredients: this.state.ingridients,\n          directions: this.state.steps\n        };\n\n        if (this.state.newRecipe) {\n          this.props.addRecipe(newRecipe); //if new call this, else call editRecipe dispatch\n        } else {\n          this.props.editRecipe(newRecipe, this.state.index); //if new call this, else call editRecipe dispatch\n        } //possibly another function to add it to the database [future]\n        //redirect to view recipe page after adding\n\n      }\n    };\n\n    this.state = {\n      recipe: props.recipe,\n      name: props.name || \"\",\n      prep: props.prep || \"\",\n      cook: props.cook || \"\",\n      ingridients: props.ingridients || \"\",\n      steps: props.step || \"\",\n      newRecipe: props.newRecipe,\n      showModal: false,\n      index: this.props.index\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.mySubmitHandler = this.mySubmitHandler.bind(this);\n    this.deleteRecipe = this.deleteRecipe.bind(this);\n    this.showModal = this.showModal.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  deleteRecipe() {\n    this.props.deleteRecipe(this.state.index);\n    this.handleClose();\n  }\n\n  showModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      showModal: false\n    });\n  } //upload image\n\n\n  render() {\n    var buttons;\n\n    if (this.state.newRecipe) {\n      buttons = /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 23\n        }\n      }, \"Add Recipe\");\n    } else {\n      buttons = /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 23\n        }\n      }, \"Save\");\n      var deleteBtn = /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.showModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }\n      }, \"Delete\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form editRecipe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \"How a Recipe Form looks like\")), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \"Back to All Recipes\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.mySubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"Image goes here\"), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formPrep\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, \"Prep Time:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"prep\",\n      type: \"text\",\n      value: this.state.prep,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 44\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formCook\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, \"Cook Time:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"cook\",\n      type: \"text\",\n      value: this.state.cook,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 44\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formIngredients\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \"Ingredients: \"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"ingridients\",\n      type: \"text\",\n      value: this.state.ingridients,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formDirections\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, \"Directions\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"steps\",\n      type: \"textarea\",\n      value: this.state.steps,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    })), buttons), deleteBtn, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: this.handleClose,\n      backdrop: \"static\",\n      keyboard: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, \"Delete Recipe\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, \"Are you sure you want to delete this recipe?\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.deleteRecipe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, \"Yes\"))));\n  }\n\n} //connect redux dispatch here\n\n\nconst mapDispatchToProps = {\n  addRecipe,\n  deleteRecipe,\n  editRecipe\n};\nexport default connect(null, mapDispatchToProps)(RecipeForm);","map":{"version":3,"sources":["C:/Users/Kimberly Flores/Documents/GitHub/recipe-keeps/client/src/components/RecipeForm.js"],"names":["React","connect","addRecipe","deleteRecipe","editRecipe","Row","Modal","Form","Button","RecipeForm","Component","constructor","props","mySubmitHandler","event","preventDefault","state","name","prep","cook","steps","ingridients","alert","newRecipe","ingredients","directions","index","recipe","step","showModal","handleInputChange","bind","handleClose","e","setState","target","value","render","buttons","deleteBtn","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addRecipe, deleteRecipe, editRecipe} from '../redux/actions';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\n//Recipe Form can display edit mode and create a new recipe\r\n\r\nclass RecipeForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            recipe: props.recipe,\r\n            name: props.name || \"\",\r\n            prep: props.prep || \"\",\r\n            cook: props.cook || \"\",\r\n            ingridients: props.ingridients || \"\",\r\n            steps: props.step || \"\",\r\n    \r\n            newRecipe: props.newRecipe,\r\n            showModal: false,\r\n            index: this.props.index\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.mySubmitHandler = this.mySubmitHandler.bind(this);\r\n        this.deleteRecipe = this.deleteRecipe.bind(this);\r\n        this.showModal = this.showModal.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n    handleInputChange(e){\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    mySubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if(this.state.name===\"\" || this.state.prep === \"\" || this.state.cook ===\"\" || this.state.prep===\"\" || this.state.steps ===\"\" || this.state.ingridients===\"\"){\r\n            alert(\"Field cannot be empty\");\r\n        }\r\n        else{\r\n            var newRecipe= {\r\n                name:this.state.name,\r\n                prep:this.state.prep,\r\n                cook: this.state.cook,\r\n                ingredients:this.state.ingridients,\r\n                directions: this.state.steps\r\n            }\r\n            if(this.state.newRecipe){\r\n                this.props.addRecipe(newRecipe); //if new call this, else call editRecipe dispatch\r\n            }\r\n            else{\r\n                this.props.editRecipe(newRecipe, this.state.index); //if new call this, else call editRecipe dispatch\r\n            }\r\n\r\n            //possibly another function to add it to the database [future]\r\n            //redirect to view recipe page after adding\r\n        }\r\n      }\r\n\r\n\r\n    deleteRecipe(){\r\n        this.props.deleteRecipe(this.state.index);\r\n        this.handleClose();\r\n\r\n    }\r\n\r\n    showModal(){\r\n        this.setState({\r\n            showModal:true\r\n        })\r\n    }\r\n  \r\n    handleClose(){\r\n        this.setState({\r\n            showModal: false\r\n        })\r\n    }\r\n\r\n\r\n    //upload image\r\n\r\n    render(){\r\n        var buttons;\r\n        if(this.state.newRecipe){\r\n            buttons = <button type=\"submit\">Add Recipe</button>;\r\n        }\r\n        else{\r\n            buttons = <button type=\"submit\">Save</button>;\r\n            var deleteBtn = <button onClick={this.showModal}>Delete</button>;\r\n\r\n        }\r\n        return(\r\n        <div className=\"form editRecipe\">\r\n            <Row>\r\n            <h1>How a Recipe Form looks like</h1>\r\n            </Row>\r\n            <Button>Back to All Recipes</Button>\r\n            <Form onSubmit={this.mySubmitHandler}>\r\n            <h3>Image goes here</h3>\r\n            <Form.Group controlId=\"formName\">\r\n            <Form.Label>Name</Form.Label>\r\n        <Form.Control type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleInputChange}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formPrep\">\r\n        <Form.Label>Prep Time:</Form.Label><Form.Control name=\"prep\" type=\"text\" value={this.state.prep} onChange={this.handleInputChange}></Form.Control> \r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formCook\">\r\n        <Form.Label>Cook Time:</Form.Label><Form.Control name=\"cook\" type=\"text\" value={this.state.cook} onChange={this.handleInputChange}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formIngredients\">\r\n            <Form.Label>Ingredients: </Form.Label>\r\n        <Form.Control name=\"ingridients\" type=\"text\" value={this.state.ingridients} onChange={this.handleInputChange}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formDirections\">\r\n            <Form.Label>Directions</Form.Label>\r\n        <Form.Control name=\"steps\" type=\"textarea\" value={this.state.steps} onChange={this.handleInputChange}></Form.Control>\r\n            </Form.Group>\r\n\r\n            {buttons}\r\n            </Form>\r\n            {deleteBtn}\r\n\r\n\r\n            <Modal\r\n        show={this.state.showModal}\r\n        onHide={this.handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Recipe</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Are you sure you want to delete this recipe?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleClose}>\r\n            No\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.deleteRecipe}>Yes</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n\r\n\r\n        </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n//connect redux dispatch here\r\nconst mapDispatchToProps = {\r\n    addRecipe,\r\n    deleteRecipe,\r\n    editRecipe\r\n};\r\n\r\nexport default connect(null,mapDispatchToProps)(RecipeForm);"]},"metadata":{},"sourceType":"module"}