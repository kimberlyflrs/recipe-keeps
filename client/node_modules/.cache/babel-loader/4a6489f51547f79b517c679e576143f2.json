{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kim\\\\Documents\\\\GitHub\\\\recipe-keeps\\\\client\\\\src\\\\pages\\\\ViewAllRecipe.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header.js';\nimport RecipeCard from '../components/RecipeCard.js';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport { userInfo } from '../redux/actions.js'; //add recipe button takes you to the add recipe page\n\nclass ViewAllRecipe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navAddRecipe: false,\n      navRecipe: false //use this so when a card is clicked we take them to the corresponding card\n\n    };\n    this.addRecipe = this.addRecipe.bind(this);\n  }\n\n  addRecipe() {\n    //navigates to the add recipe page\n    this.setState({\n      navAddRecipe: true\n    });\n  }\n\n  render() {\n    var content;\n\n    if (this.state.navAddRecipe) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/addRecipe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }\n      });\n    }\n\n    if (this.props.all_recipes.length === 0) {\n      content = /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 23\n        }\n      }, \"No recipes\");\n    } else {\n      content = this.props.all_recipes.map((x, i) => /*#__PURE__*/React.createElement(RecipeCard, {\n        key: x._id,\n        id: x._id,\n        recipe: x,\n        index: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      })); //key must be unique error\n\n      console.log(content);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      sm: 12,\n      m: 6,\n      lg: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, \"All Recipes\")), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      sm: 12,\n      m: 6,\n      lg: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.addRecipe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, \"Add Recipe\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, content)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  all_recipes: state.recipes\n});\n\nconst mapDispatchToProps = {\n  userInfo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewAllRecipe);","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/recipe-keeps/client/src/pages/ViewAllRecipe.js"],"names":["React","connect","Header","RecipeCard","Container","Row","Col","Button","Redirect","userInfo","ViewAllRecipe","Component","constructor","props","state","navAddRecipe","navRecipe","addRecipe","bind","setState","render","content","all_recipes","length","map","x","i","_id","console","log","mapStateToProps","recipes","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Header from '../components/Header.js';\r\nimport RecipeCard from '../components/RecipeCard.js';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\nimport { userInfo } from '../redux/actions.js';\r\n\r\n//add recipe button takes you to the add recipe page\r\n\r\nclass ViewAllRecipe extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            navAddRecipe: false,\r\n            navRecipe: false, //use this so when a card is clicked we take them to the corresponding card\r\n        }\r\n        this.addRecipe = this.addRecipe.bind(this);\r\n    }\r\n\r\n\r\n    addRecipe(){\r\n        //navigates to the add recipe page\r\n        this.setState({\r\n            navAddRecipe: true\r\n        })\r\n    }\r\n\r\n    render(){\r\n        var content; \r\n        if(this.state.navAddRecipe){\r\n            return <Redirect to=\"/addRecipe\"/>\r\n        }\r\n        if(this.props.all_recipes.length === 0){\r\n            content = <h2>No recipes</h2>\r\n        }\r\n        else{\r\n            content = this.props.all_recipes.map((x, i)=>\r\n            <RecipeCard key={x._id} id={x._id} recipe={x} index={i}/>); //key must be unique error\r\n            console.log(content);\r\n        }\r\n        return(\r\n            <div>\r\n            <Header/>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col xs={12} sm={12} m={6} lg={6}>\r\n                        <h1>All Recipes</h1>\r\n                    </Col>\r\n                    <Col xs={12} sm={12} m={6} lg={6}>\r\n                    <Button onClick={this.addRecipe}>Add Recipe</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {content}\r\n                </Row>\r\n            </Container>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    all_recipes: state.recipes,\r\n  });\r\n\r\n  const mapDispatchToProps = {\r\n    userInfo\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewAllRecipe);"]},"metadata":{},"sourceType":"module"}