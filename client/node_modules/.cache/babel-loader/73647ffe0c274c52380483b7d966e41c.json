{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kim\\\\Documents\\\\GitHub\\\\recipe-keeps\\\\client\\\\src\\\\components\\\\Signup.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login, signup, userInfo } from '../redux/actions'; //Signup can only be accessed if there is no token\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super();\n\n    this.myLoginSubmit = event => {\n      //checks if inputs are not empty\n      event.preventDefault();\n      var email = document.forms[\"loginForm\"][\"email\"].value;\n      var pass = document.forms[\"loginForm\"][\"password\"].value;\n\n      if (email === \"\" || pass === \"\") {\n        alert(\"Field cannot be empty\");\n      } else {\n        this.login(email, pass);\n      }\n    };\n\n    this.myRegisterSubmit = event => {\n      //checks if inputs are not empty\n      event.preventDefault();\n      var email = document.forms[\"signupForm\"][\"email\"].value;\n      var pass = document.forms[\"signupForm\"][\"password\"].value;\n      var confirmpass = document.forms[\"signupForm\"][\"confirmPassword\"].value;\n\n      if (email === \"\" || pass === \"\") {\n        alert(\"Field cannot be empty\");\n      }\n\n      if (pass !== confirmpass) {\n        alert(\"Passwords do not match\");\n      } else {\n        this.register(email, pass);\n      }\n    };\n\n    this.state = {\n      new_user: false,\n      info_valid: false\n    };\n    this.newUser = this.newUser.bind(this);\n    this.login = this.login.bind(this);\n    this.register = this.register.bind(this);\n    this.myLoginSubmit = this.myLoginSubmit.bind(this);\n    this.myRegisterSubmit = this.myRegisterSubmit.bind(this);\n  }\n\n  newUser() {\n    //switches from login to signup\n    this.setState({\n      new_user: !this.state.new_user\n    });\n  }\n\n  async login(email, password) {\n    console.log(\"here it's the login function\");\n    await this.props.login(email, password);\n  }\n\n  async register(email, password) {\n    //await the registration\n    console.log(\"here is the register function\");\n    await this.props.signup(email, password); //if signup successful call the login with the same info\n    //else show the error\n\n    console.log(\"this.props.register \" + this.props.registered);\n\n    if (this.props.registered) {\n      this.login(email, password);\n    } else {\n      console.log(\"Cannot register at this time\");\n    }\n  }\n\n  render() {\n    if (this.props.loggedIn) {\n      console.log(\"it's true! let go to view recipe\");\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/viewRecipes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 20\n        }\n      });\n    }\n\n    if (this.state.new_user) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"landingElement\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, \"Login\"), /*#__PURE__*/React.createElement(Form, {\n        name: \"loginForm\",\n        onSubmit: this.myLoginSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter Email\",\n        name: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"landing-space\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Enter Password\",\n        name: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-login\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      }, \"Login\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"link\",\n        onClick: () => this.newUser(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }\n      }, \"New to RecipeKeeps? Sign Up\")));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"landingElement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(Form, {\n      name: \"signupForm\",\n      onSubmit: this.myRegisterSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter Email\",\n      name: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"landing-space\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Enter Password\",\n      name: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"landing-space\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      name: \"confirmPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"create\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, \"Create Account\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"link\",\n      onClick: () => this.newUser(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, \"Already have an account? Login \")));\n  }\n\n}\n\nconst mapDispatchToProps = {\n  login,\n  userInfo,\n  signup\n};\n\nconst mapStateToProps = state => ({\n  loggedIn: state.logged_in,\n  registered: state.registered\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/recipe-keeps/client/src/components/Signup.js"],"names":["React","Form","Button","Redirect","connect","login","signup","userInfo","SignUp","Component","constructor","props","myLoginSubmit","event","preventDefault","email","document","forms","value","pass","alert","myRegisterSubmit","confirmpass","register","state","new_user","info_valid","newUser","bind","setState","password","console","log","registered","render","loggedIn","mapDispatchToProps","mapStateToProps","logged_in"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {login, signup, userInfo} from '../redux/actions';\r\n\r\n//Signup can only be accessed if there is no token\r\nclass SignUp extends React.Component{\r\n    constructor(props){\r\n        super()\r\n        this.state = {\r\n            new_user: false,\r\n            info_valid:false,\r\n        }\r\n        this.newUser = this.newUser.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.register = this.register.bind(this);\r\n        this.myLoginSubmit = this.myLoginSubmit.bind(this);\r\n        this.myRegisterSubmit = this.myRegisterSubmit.bind(this);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    newUser(){\r\n    //switches from login to signup\r\n        this.setState({\r\n            new_user: !(this.state.new_user)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    async login(email, password){\r\n        console.log(\"here it's the login function\");\r\n        await this.props.login(email,password);\r\n    }\r\n\r\n\r\n\r\n\r\n    async register(email, password){\r\n        //await the registration\r\n        console.log(\"here is the register function\");\r\n        await this.props.signup(email,password);\r\n        //if signup successful call the login with the same info\r\n        //else show the error\r\n        console.log(\"this.props.register \"+ this.props.registered);\r\n        if(this.props.registered){\r\n            this.login(email,password);\r\n        }\r\n        else{\r\n            console.log(\"Cannot register at this time\");\r\n        }\r\n\r\n    }\r\n\r\n    myLoginSubmit = (event) => {\r\n        //checks if inputs are not empty\r\n        event.preventDefault();\r\n        var email = document.forms[\"loginForm\"][\"email\"].value;\r\n        var pass = document.forms[\"loginForm\"][\"password\"].value;\r\n\r\n        if(email===\"\" || pass===\"\"){\r\n            alert(\"Field cannot be empty\");\r\n        }\r\n        else{\r\n            this.login(email,pass);\r\n        }\r\n      }\r\n\r\n\r\n\r\n      myRegisterSubmit = (event) => {\r\n        //checks if inputs are not empty\r\n        event.preventDefault();\r\n        var email = document.forms[\"signupForm\"][\"email\"].value;\r\n        var pass = document.forms[\"signupForm\"][\"password\"].value;\r\n        var confirmpass = document.forms[\"signupForm\"][\"confirmPassword\"].value;\r\n\r\n\r\n        if(email===\"\" || pass===\"\"){\r\n            alert(\"Field cannot be empty\");\r\n        }\r\n        if(pass !== confirmpass){\r\n            alert(\"Passwords do not match\");\r\n        }\r\n        else{\r\n            this.register(email,pass);\r\n        }\r\n      }\r\n\r\n\r\n\r\n    render(){\r\n        if(this.props.loggedIn){\r\n            console.log(\"it's true! let go to view recipe\");\r\n            return <Redirect to=\"/viewRecipes\"/>\r\n        }\r\n        if (this.state.new_user){\r\n            return(\r\n                <div className=\"form\">\r\n                    <h1 className=\"landingElement\">Login</h1>\r\n                    <Form name=\"loginForm\" onSubmit={this.myLoginSubmit}>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter Email\" name=\"email\"></Form.Control>\r\n\r\n\r\n                        <Form.Label className=\"landing-space\">Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Enter Password\" name=\"password\"></Form.Control>\r\n\r\n                        <div className=\"center\">\r\n                        <Button className=\"btn-login\" type=\"submit\">Login</Button>\r\n                        </div>\r\n                    </Form>\r\n                    <div className=\"center\">\r\n                        <Button variant=\"link\" onClick={()=>this.newUser()}>New to RecipeKeeps? Sign Up</Button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div className=\"form\">\r\n                <h1 className=\"landingElement\">Sign Up</h1>\r\n                <Form name=\"signupForm\" onSubmit={this.myRegisterSubmit}>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter Email\" name=\"email\"></Form.Control>\r\n\r\n\r\n                    <Form.Label className=\"landing-space\">Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Enter Password\" name=\"password\"></Form.Control>\r\n\r\n\r\n                    <Form.Label className=\"landing-space\">Confirm Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Confirm Password\" name=\"confirmPassword\"></Form.Control>\r\n\r\n                    <div className=\"center\">\r\n                        <Button variant=\"create\" type=\"submit\">Create Account</Button>\r\n                    </div>\r\n                </Form>\r\n                <div className=\"center\">\r\n                    <Button variant=\"link\" onClick={()=>this.newUser()}>Already have an account? Login </Button>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    login,\r\n    userInfo,\r\n    signup\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: state.logged_in,\r\n    registered: state.registered\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}