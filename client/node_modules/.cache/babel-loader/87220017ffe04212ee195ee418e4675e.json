{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kim\\\\Documents\\\\GitHub\\\\recipe-keeps\\\\client\\\\src\\\\components\\\\RecipeForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addRecipe, deleteRecipe, editRecipe } from '../redux/actions';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Row from 'react-bootstrap/Row';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom'; //Recipe Form can display edit mode and create a new recipe\n\nclass RecipeForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.mySubmitHandler = event => {\n      event.preventDefault();\n      var name = document.forms[\"recipeForm\"][\"name\"].value;\n      var prep = document.forms[\"recipeForm\"][\"prep\"].value;\n      var cook = document.forms[\"recipeForm\"][\"cook\"].value;\n      var ingredients = document.forms[\"recipeForm\"][\"ingredients\"].value;\n      var directions = document.forms[\"recipeForm\"][\"directions\"].value;\n\n      if (name === \"\" || prep === \"\" || cook === \"\" || ingredients === \"\" || directions === \"\") {\n        alert(\"Field cannot be empty\");\n      } else {\n        var newRecipe = {\n          name: name,\n          prep_time: prep,\n          cook_time: cook,\n          ingredients: ingredients.split(\"\\n\"),\n          directions: directions\n        };\n\n        if (this.state.newRecipe) {\n          addRecipe(newRecipe); //if new call add recipe\n        } else {\n          this.props.editRecipe(newRecipe, this.state.index); //else call editRecipe dispatch\n        } //possibly another function to add it to the database [future]\n        //redirect to view recipe page after adding\n\n      }\n    };\n\n    this.state = {\n      recipe: props.recipe,\n      name: props.name || \"\",\n      prep: props.prep || \"\",\n      cook: props.cook || \"\",\n      ingredients: props.ingridients || \"\",\n      directions: props.step || \"\",\n      newRecipe: props.newRecipe,\n      showModal: false,\n      index: this.props.index,\n      navAllRecipe: false\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.mySubmitHandler = this.mySubmitHandler.bind(this);\n    this.addRecipe = this.addRecipe.bind(this);\n    this.deleteRecipe = this.deleteRecipe.bind(this);\n    this.showModal = this.showModal.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.backToAllRecipe = this.backToAllRecipe.bind(this);\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  async addRecipe(recipe) {\n    //adds the recipe and then redirects to all recipes\n    await this.props.addRecipe(recipe);\n\n    if (this.props.added) {\n      this.backToAllRecipe();\n    }\n  }\n\n  deleteRecipe() {\n    this.props.deleteRecipe(this.state.index); //call the delete api call here\n\n    this.handleClose();\n  }\n\n  showModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  backToAllRecipe() {\n    this.setState({\n      navAllRecipe: true\n    });\n  } //upload image\n\n\n  render() {\n    if (this.state.navAllRecipe) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"viewRecipes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 20\n        }\n      });\n    }\n\n    var buttons;\n\n    if (this.state.newRecipe) {\n      buttons = /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 23\n        }\n      }, \"Add Recipe\");\n    } else {\n      buttons = /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 23\n        }\n      }, \"Save\");\n      var deleteBtn = /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.showModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }\n      }, \"Delete\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form editRecipe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, \"How a Recipe Form looks like\")), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.backToAllRecipe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, \"Back to All Recipes\"), /*#__PURE__*/React.createElement(Form, {\n      name: \"recipeForm\",\n      onSubmit: this.mySubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, \"Image goes here\"), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formPrep\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, \"Prep Time:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"prep\",\n      type: \"text\",\n      value: this.state.prep,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formCook\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, \"Cook Time:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"cook\",\n      type: \"text\",\n      value: this.state.cook,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formIngredients\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, \"Ingredients: \"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"ingredients\",\n      type: \"text\",\n      value: this.state.ingredients,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formDirections\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, \"Directions\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"directions\",\n      type: \"textarea\",\n      value: this.state.directions,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    })), buttons), deleteBtn, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: this.handleClose,\n      backdrop: \"static\",\n      keyboard: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }, \"Delete Recipe\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, \"Are you sure you want to delete this recipe?\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.deleteRecipe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, \"Yes\"))));\n  }\n\n} //connect redux dispatch here\n\n\nconst mapDispatchToProps = {\n  addRecipe,\n  deleteRecipe,\n  editRecipe\n};\nexport default connect(null, mapDispatchToProps)(RecipeForm);","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/recipe-keeps/client/src/components/RecipeForm.js"],"names":["React","connect","addRecipe","deleteRecipe","editRecipe","Row","Modal","Form","Button","Redirect","RecipeForm","Component","constructor","props","mySubmitHandler","event","preventDefault","name","document","forms","value","prep","cook","ingredients","directions","alert","newRecipe","prep_time","cook_time","split","state","index","recipe","ingridients","step","showModal","navAllRecipe","handleInputChange","bind","handleClose","backToAllRecipe","e","setState","target","added","render","buttons","deleteBtn","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAmBC,YAAnB,EAAiCC,UAAjC,QAAkD,kBAAlD;AACA,OAAO,kCAAP;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAAQC,QAAR,QAAuB,kBAAvB,C,CAGA;;AAEA,MAAMC,UAAN,SAAyBV,KAAK,CAACW,SAA/B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SA+BlBC,eA/BkB,GA+BCC,KAAD,IAAW;AACzBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,IAAI,GAAGC,QAAQ,CAACC,KAAT,CAAe,YAAf,EAA6B,MAA7B,EAAqCC,KAAhD;AACA,UAAIC,IAAI,GAAGH,QAAQ,CAACC,KAAT,CAAe,YAAf,EAA6B,MAA7B,EAAqCC,KAAhD;AACA,UAAIE,IAAI,GAAGJ,QAAQ,CAACC,KAAT,CAAe,YAAf,EAA6B,MAA7B,EAAqCC,KAAhD;AACA,UAAIG,WAAW,GAAGL,QAAQ,CAACC,KAAT,CAAe,YAAf,EAA6B,aAA7B,EAA4CC,KAA9D;AACA,UAAII,UAAU,GAAGN,QAAQ,CAACC,KAAT,CAAe,YAAf,EAA6B,YAA7B,EAA2CC,KAA5D;;AAEA,UAAGH,IAAI,KAAG,EAAP,IAAaI,IAAI,KAAG,EAApB,IAA0BC,IAAI,KAAG,EAAjC,IAAuCC,WAAW,KAAG,EAArD,IAA2DC,UAAU,KAAG,EAA3E,EAA+E;AAC3EC,QAAAA,KAAK,CAAC,uBAAD,CAAL;AACH,OAFD,MAII;AACA,YAAIC,SAAS,GAAE;AACXT,UAAAA,IAAI,EAAEA,IADK;AAEXU,UAAAA,SAAS,EAAEN,IAFA;AAGXO,UAAAA,SAAS,EAAEN,IAHA;AAIXC,UAAAA,WAAW,EAAEA,WAAW,CAACM,KAAZ,CAAkB,IAAlB,CAJF;AAKXL,UAAAA,UAAU,EAAEA;AALD,SAAf;;AAOA,YAAG,KAAKM,KAAL,CAAWJ,SAAd,EAAwB;AACpBxB,UAAAA,SAAS,CAACwB,SAAD,CAAT,CADoB,CACE;AACzB,SAFD,MAGI;AACA,eAAKb,KAAL,CAAWT,UAAX,CAAsBsB,SAAtB,EAAiC,KAAKI,KAAL,CAAWC,KAA5C,EADA,CACoD;AACvD,SAbD,CAeA;AACA;;AACH;AACF,KA7De;;AAEd,SAAKD,KAAL,GAAa;AACTE,MAAAA,MAAM,EAAEnB,KAAK,CAACmB,MADL;AAETf,MAAAA,IAAI,EAAEJ,KAAK,CAACI,IAAN,IAAc,EAFX;AAGTI,MAAAA,IAAI,EAAER,KAAK,CAACQ,IAAN,IAAc,EAHX;AAITC,MAAAA,IAAI,EAAET,KAAK,CAACS,IAAN,IAAc,EAJX;AAKTC,MAAAA,WAAW,EAAEV,KAAK,CAACoB,WAAN,IAAqB,EALzB;AAMTT,MAAAA,UAAU,EAAEX,KAAK,CAACqB,IAAN,IAAc,EANjB;AAQTR,MAAAA,SAAS,EAAEb,KAAK,CAACa,SARR;AASTS,MAAAA,SAAS,EAAE,KATF;AAUTJ,MAAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWkB,KAVT;AAYTK,MAAAA,YAAY,EAAC;AAZJ,KAAb;AAcA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKxB,eAAL,GAAuB,KAAKA,eAAL,CAAqBwB,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKpC,SAAL,GAAiB,KAAKA,SAAL,CAAeoC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKnC,YAAL,GAAoB,KAAKA,YAAL,CAAkBmC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKH,SAAL,GAAiB,KAAKA,SAAL,CAAeG,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AACH;;AAEDD,EAAAA,iBAAiB,CAACI,CAAD,EAAG;AAChB,SAAKC,QAAL,CAAc;AACV,OAACD,CAAC,CAACE,MAAF,CAAS1B,IAAV,GAAiBwB,CAAC,CAACE,MAAF,CAASvB;AADhB,KAAd;AAGH;;AAmCD,QAAMlB,SAAN,CAAgB8B,MAAhB,EAAuB;AACnB;AACA,UAAM,KAAKnB,KAAL,CAAWX,SAAX,CAAqB8B,MAArB,CAAN;;AACA,QAAG,KAAKnB,KAAL,CAAW+B,KAAd,EAAoB;AAChB,WAAKJ,eAAL;AACH;AACJ;;AAIDrC,EAAAA,YAAY,GAAE;AACV,SAAKU,KAAL,CAAWV,YAAX,CAAwB,KAAK2B,KAAL,CAAWC,KAAnC,EADU,CAEV;;AACA,SAAKQ,WAAL;AAEH;;AAEDJ,EAAAA,SAAS,GAAE;AACP,SAAKO,QAAL,CAAc;AACVP,MAAAA,SAAS,EAAC;AADA,KAAd;AAGH;;AAEDI,EAAAA,WAAW,GAAE;AACT,SAAKG,QAAL,CAAc;AACVP,MAAAA,SAAS,EAAE;AADD,KAAd;AAGH;;AAEDK,EAAAA,eAAe,GAAE;AACb,SAAKE,QAAL,CAAc;AACVN,MAAAA,YAAY,EAAC;AADH,KAAd;AAGH,GAlGmC,CAqGpC;;;AAEAS,EAAAA,MAAM,GAAE;AACJ,QAAG,KAAKf,KAAL,CAAWM,YAAd,EAA2B;AACvB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,QAAIU,OAAJ;;AACA,QAAG,KAAKhB,KAAL,CAAWJ,SAAd,EAAwB;AACpBoB,MAAAA,OAAO,gBAAG;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAV;AACH,KAFD,MAGI;AACAA,MAAAA,OAAO,gBAAG;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAV;AACA,UAAIC,SAAS,gBAAG;AAAQ,QAAA,OAAO,EAAE,KAAKZ,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAhB;AAEH;;AACD,wBACA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADA,CADJ,eAII,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKK,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJJ,eAKI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,YAAX;AAAwB,MAAA,QAAQ,EAAE,KAAK1B,eAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,eAEA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,IAAI,EAAC,MAA/B;AAAsC,MAAA,KAAK,EAAE,KAAKgB,KAAL,CAAWb,IAAxD;AAA8D,MAAA,QAAQ,EAAE,KAAKoB,iBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFA,eAOA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,IAAI,EAAC,MAA/B;AAAsC,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWT,IAAxD;AAA8D,MAAA,QAAQ,EAAE,KAAKgB,iBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAPA,eAYA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,IAAI,EAAC,MAA/B;AAAsC,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWR,IAAxD;AAA8D,MAAA,QAAQ,EAAE,KAAKe,iBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAZA,eAiBA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,aAAnB;AAAiC,MAAA,IAAI,EAAC,MAAtC;AAA6C,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWP,WAA/D;AAA4E,MAAA,QAAQ,EAAE,KAAKc,iBAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAjBA,eAsBA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,YAAnB;AAAgC,MAAA,IAAI,EAAC,UAArC;AAAgD,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWN,UAAlE;AAA8E,MAAA,QAAQ,EAAE,KAAKa,iBAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAtBA,EA2BCS,OA3BD,CALJ,EAkCKC,SAlCL,eAqCI,oBAAC,KAAD;AACJ,MAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWK,SADb;AAEJ,MAAA,MAAM,EAAE,KAAKI,WAFT;AAGJ,MAAA,QAAQ,EAAC,QAHL;AAIJ,MAAA,QAAQ,EAAE,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMJ,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CANI,eASJ,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDATI,eAYJ,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAE,KAAKA,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,KAAKpC,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CAZI,CArCJ,CADA;AA+DH;;AAnLmC,C,CAuLxC;;;AACA,MAAM6C,kBAAkB,GAAG;AACvB9C,EAAAA,SADuB;AAEvBC,EAAAA,YAFuB;AAGvBC,EAAAA;AAHuB,CAA3B;AAMA,eAAeH,OAAO,CAAC,IAAD,EAAM+C,kBAAN,CAAP,CAAiCtC,UAAjC,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addRecipe, deleteRecipe, editRecipe} from '../redux/actions';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\n//Recipe Form can display edit mode and create a new recipe\r\n\r\nclass RecipeForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            recipe: props.recipe,\r\n            name: props.name || \"\",\r\n            prep: props.prep || \"\",\r\n            cook: props.cook || \"\",\r\n            ingredients: props.ingridients || \"\",\r\n            directions: props.step || \"\",\r\n    \r\n            newRecipe: props.newRecipe,\r\n            showModal: false,\r\n            index: this.props.index,\r\n\r\n            navAllRecipe:false\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.mySubmitHandler = this.mySubmitHandler.bind(this);\r\n        this.addRecipe = this.addRecipe.bind(this);\r\n        this.deleteRecipe = this.deleteRecipe.bind(this);\r\n        this.showModal = this.showModal.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.backToAllRecipe = this.backToAllRecipe.bind(this);\r\n    }\r\n\r\n    handleInputChange(e){\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    mySubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        var name = document.forms[\"recipeForm\"][\"name\"].value;\r\n        var prep = document.forms[\"recipeForm\"][\"prep\"].value;\r\n        var cook = document.forms[\"recipeForm\"][\"cook\"].value;\r\n        var ingredients = document.forms[\"recipeForm\"][\"ingredients\"].value;\r\n        var directions = document.forms[\"recipeForm\"][\"directions\"].value;\r\n\r\n        if(name===\"\" || prep===\"\" || cook===\"\" || ingredients===\"\" || directions===\"\" ){\r\n            alert(\"Field cannot be empty\");\r\n        }\r\n\r\n        else{\r\n            var newRecipe= {\r\n                name: name,\r\n                prep_time: prep,\r\n                cook_time: cook,\r\n                ingredients: ingredients.split(\"\\n\"),\r\n                directions: directions\r\n            }\r\n            if(this.state.newRecipe){\r\n                addRecipe(newRecipe); //if new call add recipe\r\n            }\r\n            else{\r\n                this.props.editRecipe(newRecipe, this.state.index); //else call editRecipe dispatch\r\n            }\r\n\r\n            //possibly another function to add it to the database [future]\r\n            //redirect to view recipe page after adding\r\n        }\r\n      }\r\n\r\n\r\n    async addRecipe(recipe){\r\n        //adds the recipe and then redirects to all recipes\r\n        await this.props.addRecipe(recipe);\r\n        if(this.props.added){\r\n            this.backToAllRecipe()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    deleteRecipe(){\r\n        this.props.deleteRecipe(this.state.index);\r\n        //call the delete api call here\r\n        this.handleClose();\r\n\r\n    }\r\n\r\n    showModal(){\r\n        this.setState({\r\n            showModal:true\r\n        })\r\n    }\r\n  \r\n    handleClose(){\r\n        this.setState({\r\n            showModal: false\r\n        })\r\n    }\r\n\r\n    backToAllRecipe(){\r\n        this.setState({\r\n            navAllRecipe:true\r\n        })\r\n    }\r\n\r\n\r\n    //upload image\r\n\r\n    render(){\r\n        if(this.state.navAllRecipe){\r\n            return <Redirect to=\"viewRecipes\"/>\r\n        }\r\n        var buttons;\r\n        if(this.state.newRecipe){\r\n            buttons = <button type=\"submit\">Add Recipe</button>;\r\n        }\r\n        else{\r\n            buttons = <button type=\"submit\">Save</button>;\r\n            var deleteBtn = <button onClick={this.showModal}>Delete</button>;\r\n\r\n        }\r\n        return(\r\n        <div className=\"form editRecipe\">\r\n            <Row>\r\n            <h1>How a Recipe Form looks like</h1>\r\n            </Row>\r\n            <Button onClick={this.backToAllRecipe}>Back to All Recipes</Button>\r\n            <Form name=\"recipeForm\" onSubmit={this.mySubmitHandler}>\r\n            <h3>Image goes here</h3>\r\n            <Form.Group controlId=\"formName\">\r\n            <Form.Label>Name</Form.Label>\r\n                <Form.Control type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleInputChange}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formPrep\">\r\n                <Form.Label>Prep Time:</Form.Label>\r\n                <Form.Control name=\"prep\" type=\"text\" value={this.state.prep} onChange={this.handleInputChange}></Form.Control> \r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formCook\">\r\n                <Form.Label>Cook Time:</Form.Label>\r\n                <Form.Control name=\"cook\" type=\"text\" value={this.state.cook} onChange={this.handleInputChange}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formIngredients\">\r\n            <Form.Label>Ingredients: </Form.Label>\r\n                <Form.Control name=\"ingredients\" type=\"text\" value={this.state.ingredients} onChange={this.handleInputChange}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formDirections\">\r\n            <Form.Label>Directions</Form.Label>\r\n                <Form.Control name=\"directions\" type=\"textarea\" value={this.state.directions} onChange={this.handleInputChange}></Form.Control>\r\n            </Form.Group>\r\n\r\n            {buttons}\r\n            </Form>\r\n            {deleteBtn}\r\n\r\n\r\n            <Modal\r\n        show={this.state.showModal}\r\n        onHide={this.handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Recipe</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Are you sure you want to delete this recipe?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleClose}>\r\n            No\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.deleteRecipe}>Yes</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n\r\n\r\n        </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n//connect redux dispatch here\r\nconst mapDispatchToProps = {\r\n    addRecipe,\r\n    deleteRecipe,\r\n    editRecipe\r\n};\r\n\r\nexport default connect(null,mapDispatchToProps)(RecipeForm);"]},"metadata":{},"sourceType":"module"}