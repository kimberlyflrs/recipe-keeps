{"ast":null,"code":"import { ADD_RECIPE, DELETE_RECIPE, EDIT_RECIPE, LOGIN, LOGOUT, DELETE_ACCOUNT, LOAD_USER } from './actionType';\nimport axios from 'axios';\nimport setAuth from '../utils/setAuth.js';\nexport const addRecipe = recipe => ({\n  type: ADD_RECIPE,\n  recipe: recipe\n});\nexport const deleteRecipe = index => ({\n  type: DELETE_RECIPE,\n  index: index\n});\nexport const editRecipe = (recipe, index) => ({\n  type: EDIT_RECIPE,\n  recipe: recipe,\n  index: index\n});\n\nfunction auth() {\n  if (localStorage.token) {\n    setAuth(localStorage.token);\n  }\n}\n\nfunction userInfo() {\n  //gets the user info from db\n  //call the api to get user info\n  return async function (dispatch) {\n    console.log('we are getting the user info rn');\n\n    try {\n      const res = await axios.get('/login', {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      dispatch({\n        type: LOAD_USER,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log(err);\n    } //dispatch load user to set user info\n\n  };\n}\n\nexport function login(email, password) {\n  console.log('we are starting');\n  return async dispatch => {\n    try {\n      const res = await axios.post('/login', {\n        \"email\": email,\n        \"password\": password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      dispatch({\n        type: LOGIN,\n        payload: res.data\n      }); //load the user info\n\n      console.log('getting user info over here dud');\n      auth();\n      userInfo();\n    } catch (error) {\n      console.log('error caught in action.js');\n    }\n    /*{\r\n    type: LOGIN,\r\n    email: email,\r\n    password: password\r\n    }*/\n\n  };\n}\nexport const logout = () => ({\n  type: LOGOUT\n});\nexport const deleteAccount = () => ({\n  type: DELETE_ACCOUNT\n});","map":{"version":3,"sources":["C:/Users/Kimberly Flores/Documents/GitHub/recipe-keeps/client/src/redux/actions.js"],"names":["ADD_RECIPE","DELETE_RECIPE","EDIT_RECIPE","LOGIN","LOGOUT","DELETE_ACCOUNT","LOAD_USER","axios","setAuth","addRecipe","recipe","type","deleteRecipe","index","editRecipe","auth","localStorage","token","userInfo","dispatch","console","log","res","get","headers","payload","data","err","login","email","password","post","error","logout","deleteAccount"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,aAArB,EAAoCC,WAApC,EAAiDC,KAAjD,EAAwDC,MAAxD,EAAgEC,cAAhE,EAAgFC,SAAhF,QAAgG,cAAhG;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAGA,OAAO,MAAMC,SAAS,GAAIC,MAAD,KAAa;AAClCC,EAAAA,IAAI,EAAEX,UAD4B;AAElCU,EAAAA,MAAM,EAAEA;AAF0B,CAAb,CAAlB;AAKP,OAAO,MAAME,YAAY,GAAIC,KAAD,KAAY;AACpCF,EAAAA,IAAI,EAAEV,aAD8B;AAEpCY,EAAAA,KAAK,EAAEA;AAF6B,CAAZ,CAArB;AAKP,OAAO,MAAMC,UAAU,GAAG,CAACJ,MAAD,EAASG,KAAT,MAAoB;AAC1CF,EAAAA,IAAI,EAAET,WADoC;AAE1CQ,EAAAA,MAAM,EAACA,MAFmC;AAG1CG,EAAAA,KAAK,EAAEA;AAHmC,CAApB,CAAnB;;AAMP,SAASE,IAAT,GAAe;AACX,MAAGC,YAAY,CAACC,KAAhB,EAAsB;AAClBT,IAAAA,OAAO,CAACQ,YAAY,CAACC,KAAd,CAAP;AACH;AACJ;;AAGD,SAASC,QAAT,GAAmB;AACf;AACA;AACA,SAAO,gBAAeC,QAAf,EAAwB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;;AACA,QAAG;AACC,YAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAU,QAAV,EAClB;AAACC,QAAAA,OAAO,EAAE;AACN,0BAAgB;AADV;AAAV,OADkB,CAAlB;AAIAL,MAAAA,QAAQ,CAAC;AACLR,QAAAA,IAAI,EAAEL,SADD;AAELmB,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,OAAD,CAAR;AAIC,KATL,CAUI,OAAMC,GAAN,EAAU;AACNP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACH,KAdkB,CAenB;;AACH,GAhBT;AAiBH;;AAID,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAA+B;AAClCV,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,SAAO,MAAMF,QAAN,IAAiB;AACxB,QAAI;AACA,YAAMG,GAAG,GAAG,MAAMf,KAAK,CAACwB,IAAN,CAAW,QAAX,EAClB;AACI,iBAASF,KADb;AAEI,oBAAYC;AAFhB,OADkB,EAMlB;AACAN,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AADT,OANkB,CAAlB;AAaAL,MAAAA,QAAQ,CAAC;AACLR,QAAAA,IAAI,EAAER,KADD;AAELsB,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,OAAD,CAAR,CAdA,CAmBA;;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACAN,MAAAA,IAAI;AACJG,MAAAA,QAAQ;AACX,KAvBD,CAwBA,OAAOc,KAAP,EAAc;AACVZ,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH;AAED;;;;;;AAIA,GAjCA;AAkCH;AAED,OAAO,MAAMY,MAAM,GAAG,OAAO;AACzBtB,EAAAA,IAAI,EAAEP;AADmB,CAAP,CAAf;AAOP,OAAO,MAAM8B,aAAa,GAAG,OAAO;AAChCvB,EAAAA,IAAI,EAAEN;AAD0B,CAAP,CAAtB","sourcesContent":["import { ADD_RECIPE, DELETE_RECIPE, EDIT_RECIPE, LOGIN, LOGOUT, DELETE_ACCOUNT, LOAD_USER} from './actionType';\r\nimport axios from 'axios';\r\nimport setAuth from '../utils/setAuth.js';\r\n\r\n\r\nexport const addRecipe = (recipe) => ({\r\n    type: ADD_RECIPE,\r\n    recipe: recipe\r\n})\r\n\r\nexport const deleteRecipe = (index) => ({\r\n    type: DELETE_RECIPE,\r\n    index: index\r\n})\r\n\r\nexport const editRecipe = (recipe, index) => ({\r\n    type: EDIT_RECIPE,\r\n    recipe:recipe,\r\n    index: index\r\n})\r\n\r\nfunction auth(){\r\n    if(localStorage.token){\r\n        setAuth(localStorage.token);\r\n    }\r\n}\r\n\r\n\r\nfunction userInfo(){\r\n    //gets the user info from db\r\n    //call the api to get user info\r\n    return async function(dispatch){\r\n            console.log('we are getting the user info rn');\r\n            try{\r\n                const res = await axios.get('/login', \r\n                {headers: {\r\n                    'Content-Type': 'application/json'}\r\n                });\r\n                dispatch({\r\n                    type: LOAD_USER,\r\n                    payload: res.data\r\n                    });\r\n                }\r\n                catch(err){\r\n                    console.log(err);\r\n                }\r\n                //dispatch load user to set user info\r\n            } \r\n}\r\n\r\n\r\n\r\nexport function login(email, password){\r\n    console.log('we are starting');\r\n    return async(dispatch)=>{\r\n    try {\r\n        const res = await axios.post('/login', \r\n        {\r\n            \"email\": email,\r\n            \"password\": password\r\n            \r\n        },\r\n        {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }   \r\n        );\r\n\r\n        dispatch({\r\n            type: LOGIN,\r\n            payload: res.data\r\n        });\r\n\r\n        //load the user info\r\n        console.log('getting user info over here dud');\r\n        auth();\r\n        userInfo();\r\n    } \r\n    catch (error) {\r\n        console.log('error caught in action.js');\r\n    }\r\n\r\n    /*{\r\n    type: LOGIN,\r\n    email: email,\r\n    password: password\r\n}*/}\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: LOGOUT\r\n})\r\n\r\n\r\n\r\n\r\nexport const deleteAccount = () => ({\r\n    type: DELETE_ACCOUNT\r\n})"]},"metadata":{},"sourceType":"module"}