{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kim\\\\Documents\\\\GitHub\\\\recipe-keeps\\\\client\\\\src\\\\components\\\\RecipeForm.js\";\n//Recipe Form can display edit mode and create a new recipe\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addRecipe, deleteRecipe, editRecipe, userInfo } from '../redux/actions';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport { Holder } from \"./holder.svg\"; //FilePond\n\nimport { FilePond, registerPlugin } from 'react-filepond'; // Import FilePond styles\n\nimport 'filepond/dist/filepond.min.css'; //FilePond Plugins\n\nimport FilePondPluginFileEncode from 'filepond-plugin-file-encode';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview'; // Register the plugins\n\nregisterPlugin(FilePondPluginFileEncode, FilePondPluginImagePreview);\n\nclass RecipeForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.mySubmitHandler = event => {\n      console.log('addRecipe has been clicked');\n      event.preventDefault();\n      var name = document.forms[\"recipeForm\"][\"name\"].value;\n      var prep = document.forms[\"recipeForm\"][\"prep\"].value;\n      var cook = document.forms[\"recipeForm\"][\"cook\"].value;\n      var ingredients = document.forms[\"recipeForm\"][\"ingredients\"].value;\n      var directions = document.forms[\"recipeForm\"][\"directions\"].value;\n      var img = this.state.image;\n\n      if (name === \"\" || prep === \"\" || cook === \"\" || ingredients === \"\" || directions === \"\") {\n        alert(\"Field cannot be empty\");\n      } else {\n        var newRecipe = {\n          name: name,\n          prep_time: prep,\n          cook_time: cook,\n          ingredients: ingredients.split(\"\\n\"),\n          directions: directions,\n          image: this.state.file\n        };\n\n        if (this.state.newRecipe) {\n          console.log('making new recipe');\n          this.addRecipe(newRecipe); //if new call add recipe\n        } else {\n          console.log('making edits to a recipe');\n          this.editRecipe(newRecipe, this.state.index); //else call editRecipe dispatch\n        }\n      }\n    };\n\n    this.state = {\n      recipe: props.recipe,\n      name: props.recipe.name || \"\",\n      prep: props.recipe.prep_time || \"\",\n      cook: props.recipe.cook_time || \"\",\n      ingredients: props.recipe.ingredients || \"\",\n      directions: props.recipe.directions || \"\",\n      image: props.recipe.image || \"\",\n      file: \"\",\n      newRecipe: props.newRecipe,\n      showModal: false,\n      index: props.index,\n      navAllRecipe: false,\n      files: [{\n        source: 'index.html',\n        options: {\n          type: 'local'\n        }\n      }]\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.mySubmitHandler = this.mySubmitHandler.bind(this);\n    this.addRecipe = this.addRecipe.bind(this);\n    this.editRecipe = this.editRecipe.bind(this);\n    this.deleteRecipe = this.deleteRecipe.bind(this);\n    this.showModal = this.showModal.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.backToAllRecipe = this.backToAllRecipe.bind(this);\n    this.previewImage = this.previewImage.bind(this);\n    this.upload = this.upload.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.props.userInfo();\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  async addRecipe(recipe) {\n    //adds the recipe and then redirects to all recipes\n    console.log('addRecipe has been clicked');\n    await this.props.addRecipe(recipe);\n\n    if (this.props.added) {\n      //check for an error instead (if successful, or token expired attempt back to all recipe)\n      //if server error [show the error] on the page so enable it\n      this.backToAllRecipe();\n    }\n  }\n\n  async editRecipe(recipe, index) {\n    //edits the recipe and then redirects to all recipes\n    console.log('addRecipe has been clicked');\n    await this.props.editRecipe(recipe, index);\n\n    if (this.props.added) {\n      this.backToAllRecipe();\n    }\n  }\n\n  async deleteRecipe() {\n    console.log(this.state.recipe._id);\n    await this.props.deleteRecipe(this.state.recipe._id, this.state.index); //pass entry id\n    //call the delete api call here\n\n    this.handleClose(); //navigate to viewallrecipes\n\n    this.backToAllRecipe();\n  }\n\n  showModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  backToAllRecipe() {\n    this.setState({\n      navAllRecipe: true\n    });\n  } //upload image\n\n\n  previewImage(event) {\n    //allows the user to submit an image from their files\n    console.log(event.target.files[0]);\n    let data = new FormData();\n    data.append('RecipeImage', event.target.files[0]);\n    var options = {\n      image: data\n    };\n    data.forEach((value, key) => {\n      console.log(\"key %s: value %s\", key, value);\n    });\n    this.setState({\n      image: URL.createObjectURL(event.target.files[0]),\n      file: options\n    });\n  } //changes image to base64 string\n\n\n  upload(file) {\n    let data = new FormData();\n    data.append('RecipeImage', file);\n    return data;\n  }\n\n  handleInit() {\n    console.log('FilePond instance has initialised', this.pond);\n  }\n\n  render() {\n    if (this.state.navAllRecipe) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/viewRecipes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 20\n        }\n      });\n    }\n\n    if (!this.props.loggedIn) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/landing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 20\n        }\n      });\n    }\n\n    var buttons;\n    var title;\n\n    if (this.state.newRecipe) {\n      buttons = /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        className: \"btn-bblue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 23\n        }\n      }, \"Add Recipe\");\n      title = \"Add a Recipe\";\n    } else {\n      buttons = /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        className: \"btn-bblue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 23\n        }\n      }, \"Save\");\n      var deleteBtn = /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-delete\",\n        variant: \"danger\",\n        onClick: this.showModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 29\n        }\n      }, \"Delete\");\n      title = \"Editing a Recipe\";\n    }\n\n    var img;\n\n    if (this.state.image === \"\") {\n      img = /*#__PURE__*/React.createElement(\"img\", {\n        src: require('../images/no-image-available.png'),\n        className: \"recipe-image\",\n        id: \"practice\",\n        alt: \"No file found\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 18\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form editRecipe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"spacing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-bblue\",\n      onClick: this.backToAllRecipe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, \"Back To Recipe\")), /*#__PURE__*/React.createElement(Col, {\n      className: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }, deleteBtn)), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }\n    }, title), /*#__PURE__*/React.createElement(Form, {\n      name: \"recipeForm\",\n      onSubmit: this.mySubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"left-text spacing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }, \"Recipe Name\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"left-text spacing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"12\",\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    }, \"Image Upload\")), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"left-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.File, {\n      id: \"recipe_image\",\n      label: \"Upload Image\",\n      accept: \"image/*\",\n      onChange: this.previewImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.image,\n      className: \"recipe-image\",\n      id: \"preview\",\n      alt: \"No file found\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FilePond, {\n      ref: ref => this.pond = ref,\n      files: this.state.files,\n      allowMultiple: true,\n      maxFiles: 3,\n      server: \"/api\",\n      oninit: () => this.handleInit(),\n      onupdatefiles: fileItems => {\n        // Set current file objects to this.state\n        this.setState({\n          files: fileItems.map(fileItem => fileItem.file)\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Row, {\n      className: \"left-text spacing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"4\",\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 25\n      }\n    }, \"Prep Time:\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"prep\",\n      type: \"text\",\n      value: this.state.prep,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"4\",\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 25\n      }\n    }, \"Cook Time:\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"cook\",\n      type: \"text\",\n      value: this.state.cook,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 25\n      }\n    }))))), /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"left-text spacing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 13\n      }\n    }, \"Ingredients: \"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"ingredients\",\n      as: \"textarea\",\n      rows: \"4\",\n      value: this.state.ingredients,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"left-text spacing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }\n    }, \"Directions\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"directions\",\n      as: \"textarea\",\n      rows: \"4\",\n      value: this.state.directions,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }\n    })), buttons), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: this.handleClose,\n      backdrop: \"static\",\n      keyboard: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }\n    }, \"Delete Recipe\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }\n    }, \"Are you sure you want to delete this recipe?\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.deleteRecipe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }\n    }, \"Yes\"))));\n  }\n\n} //connect redux dispatch here\n\n\nconst mapDispatchToProps = {\n  addRecipe,\n  deleteRecipe,\n  editRecipe,\n  userInfo\n};\n\nconst mapStateToProps = state => ({\n  added: state.added,\n  loggedIn: state.logged_in\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeForm);","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/recipe-keeps/client/src/components/RecipeForm.js"],"names":["React","connect","addRecipe","deleteRecipe","editRecipe","userInfo","Row","Col","Modal","Form","Button","Redirect","FilePond","registerPlugin","FilePondPluginFileEncode","FilePondPluginImagePreview","RecipeForm","Component","constructor","props","mySubmitHandler","event","console","log","preventDefault","name","document","forms","value","prep","cook","ingredients","directions","img","state","image","alert","newRecipe","prep_time","cook_time","split","file","index","recipe","showModal","navAllRecipe","files","source","options","type","handleInputChange","bind","handleClose","backToAllRecipe","previewImage","upload","componentDidMount","e","setState","target","added","_id","data","FormData","append","forEach","key","URL","createObjectURL","handleInit","pond","render","loggedIn","buttons","title","deleteBtn","require","ref","fileItems","map","fileItem","mapDispatchToProps","mapStateToProps","logged_in"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAmBC,YAAnB,EAAiCC,UAAjC,EAA6CC,QAA7C,QAA4D,kBAA5D;AACA,OAAO,kCAAP;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;uCAKA;;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,gBAAzC,C,CAEA;;AACA,OAAO,gCAAP,C,CAGA;;AACA,OAAOC,wBAAP,MAAqC,6BAArC;AACA,OAAOC,0BAAP,MAAuC,+BAAvC,C,CAEA;;AACAF,cAAc,CAACC,wBAAD,EAA2BC,0BAA3B,CAAd;;AAIA,MAAMC,UAAN,SAAyBhB,KAAK,CAACiB,SAA/B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SA+ClBC,eA/CkB,GA+CCC,KAAD,IAAW;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AAEAF,MAAAA,KAAK,CAACG,cAAN;AACA,UAAIC,IAAI,GAAGC,QAAQ,CAACC,KAAT,CAAe,YAAf,EAA6B,MAA7B,EAAqCC,KAAhD;AACA,UAAIC,IAAI,GAAGH,QAAQ,CAACC,KAAT,CAAe,YAAf,EAA6B,MAA7B,EAAqCC,KAAhD;AACA,UAAIE,IAAI,GAAGJ,QAAQ,CAACC,KAAT,CAAe,YAAf,EAA6B,MAA7B,EAAqCC,KAAhD;AACA,UAAIG,WAAW,GAAGL,QAAQ,CAACC,KAAT,CAAe,YAAf,EAA6B,aAA7B,EAA4CC,KAA9D;AACA,UAAII,UAAU,GAAGN,QAAQ,CAACC,KAAT,CAAe,YAAf,EAA6B,YAA7B,EAA2CC,KAA5D;AACA,UAAIK,GAAG,GAAG,KAAKC,KAAL,CAAWC,KAArB;;AAEA,UAAGV,IAAI,KAAG,EAAP,IAAaI,IAAI,KAAG,EAApB,IAA0BC,IAAI,KAAG,EAAjC,IAAuCC,WAAW,KAAG,EAArD,IAA2DC,UAAU,KAAG,EAA3E,EAA+E;AAC3EI,QAAAA,KAAK,CAAC,uBAAD,CAAL;AACH,OAFD,MAII;AAEA,YAAIC,SAAS,GAAE;AACXZ,UAAAA,IAAI,EAAEA,IADK;AAEXa,UAAAA,SAAS,EAAET,IAFA;AAGXU,UAAAA,SAAS,EAAET,IAHA;AAIXC,UAAAA,WAAW,EAAEA,WAAW,CAACS,KAAZ,CAAkB,IAAlB,CAJF;AAKXR,UAAAA,UAAU,EAAEA,UALD;AAMXG,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWO;AANP,SAAf;;AAQA,YAAG,KAAKP,KAAL,CAAWG,SAAd,EAAwB;AACpBf,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,eAAKrB,SAAL,CAAemC,SAAf,EAFoB,CAEO;AAC9B,SAHD,MAII;AACAf,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,eAAKnB,UAAL,CAAgBiC,SAAhB,EAA2B,KAAKH,KAAL,CAAWQ,KAAtC,EAFA,CAE8C;AACjD;AACJ;AACF,KAjFe;;AAEd,SAAKR,KAAL,GAAa;AACTS,MAAAA,MAAM,EAAExB,KAAK,CAACwB,MADL;AAETlB,MAAAA,IAAI,EAAEN,KAAK,CAACwB,MAAN,CAAalB,IAAb,IAAqB,EAFlB;AAGTI,MAAAA,IAAI,EAAEV,KAAK,CAACwB,MAAN,CAAaL,SAAb,IAA0B,EAHvB;AAITR,MAAAA,IAAI,EAAEX,KAAK,CAACwB,MAAN,CAAaJ,SAAb,IAA0B,EAJvB;AAKTR,MAAAA,WAAW,EAAEZ,KAAK,CAACwB,MAAN,CAAaZ,WAAb,IAA4B,EALhC;AAMTC,MAAAA,UAAU,EAAEb,KAAK,CAACwB,MAAN,CAAaX,UAAb,IAA2B,EAN9B;AAOTG,MAAAA,KAAK,EAAEhB,KAAK,CAACwB,MAAN,CAAaR,KAAb,IAAqB,EAPnB;AAQTM,MAAAA,IAAI,EAAE,EARG;AAUTJ,MAAAA,SAAS,EAAElB,KAAK,CAACkB,SAVR;AAWTO,MAAAA,SAAS,EAAE,KAXF;AAYTF,MAAAA,KAAK,EAAEvB,KAAK,CAACuB,KAZJ;AAcTG,MAAAA,YAAY,EAAC,KAdJ;AAgBTC,MAAAA,KAAK,EAAE,CAAC;AACJC,QAAAA,MAAM,EAAE,YADJ;AAEJC,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAE;AADD;AAFL,OAAD;AAhBE,KAAb;AAuBA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAK/B,eAAL,GAAuB,KAAKA,eAAL,CAAqB+B,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKjD,SAAL,GAAiB,KAAKA,SAAL,CAAeiD,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAK/C,UAAL,GAAkB,KAAKA,UAAL,CAAgB+C,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKhD,YAAL,GAAoB,KAAKA,YAAL,CAAkBgD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKP,SAAL,GAAiB,KAAKA,SAAL,CAAeO,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKI,MAAL,GAAc,KAAKA,MAAL,CAAYJ,IAAZ,CAAiB,IAAjB,CAAd;AACH;;AAED,QAAMK,iBAAN,GAAyB;AACrB,UAAM,KAAKrC,KAAL,CAAWd,QAAX,EAAN;AACH;;AAED6C,EAAAA,iBAAiB,CAACO,CAAD,EAAG;AAChB,SAAKC,QAAL,CAAc;AACV,OAACD,CAAC,CAACE,MAAF,CAASlC,IAAV,GAAiBgC,CAAC,CAACE,MAAF,CAAS/B;AADhB,KAAd;AAGH;;AAuCD,QAAM1B,SAAN,CAAgByC,MAAhB,EAAuB;AACnB;AACArB,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,UAAM,KAAKJ,KAAL,CAAWjB,SAAX,CAAqByC,MAArB,CAAN;;AACA,QAAG,KAAKxB,KAAL,CAAWyC,KAAd,EAAoB;AAAC;AACjB;AACA,WAAKP,eAAL;AACH;AACJ;;AAED,QAAMjD,UAAN,CAAiBuC,MAAjB,EAAyBD,KAAzB,EAA+B;AAC3B;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,UAAM,KAAKJ,KAAL,CAAWf,UAAX,CAAsBuC,MAAtB,EAA6BD,KAA7B,CAAN;;AACA,QAAG,KAAKvB,KAAL,CAAWyC,KAAd,EAAoB;AAChB,WAAKP,eAAL;AACH;AACJ;;AAED,QAAMlD,YAAN,GAAoB;AAChBmB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKW,KAAL,CAAWS,MAAX,CAAkBkB,GAA9B;AACA,UAAM,KAAK1C,KAAL,CAAWhB,YAAX,CAAwB,KAAK+B,KAAL,CAAWS,MAAX,CAAkBkB,GAA1C,EAA+C,KAAK3B,KAAL,CAAWQ,KAA1D,CAAN,CAFgB,CAEwD;AACxE;;AACA,SAAKU,WAAL,GAJgB,CAKhB;;AACA,SAAKC,eAAL;AAEH;;AAEDT,EAAAA,SAAS,GAAE;AACP,SAAKc,QAAL,CAAc;AACVd,MAAAA,SAAS,EAAC;AADA,KAAd;AAGH;;AAEDQ,EAAAA,WAAW,GAAE;AACT,SAAKM,QAAL,CAAc;AACVd,MAAAA,SAAS,EAAE;AADD,KAAd;AAGH;;AAEDS,EAAAA,eAAe,GAAE;AACb,SAAKK,QAAL,CAAc;AACVb,MAAAA,YAAY,EAAC;AADH,KAAd;AAGH,GAlImC,CAqIpC;;;AACAS,EAAAA,YAAY,CAACjC,KAAD,EAAO;AACf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACsC,MAAN,CAAab,KAAb,CAAmB,CAAnB,CAAZ;AACA,QAAIgB,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,aAAZ,EAA2B3C,KAAK,CAACsC,MAAN,CAAab,KAAb,CAAmB,CAAnB,CAA3B;AACA,QAAIE,OAAO,GAAG;AAACb,MAAAA,KAAK,EAAE2B;AAAR,KAAd;AACAA,IAAAA,IAAI,CAACG,OAAL,CAAa,CAACrC,KAAD,EAAQsC,GAAR,KAAgB;AACzB5C,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC2C,GAAhC,EAAqCtC,KAArC;AACC,KAFL;AAIA,SAAK8B,QAAL,CAAc;AACVvB,MAAAA,KAAK,EAAEgC,GAAG,CAACC,eAAJ,CAAoB/C,KAAK,CAACsC,MAAN,CAAab,KAAb,CAAmB,CAAnB,CAApB,CADG;AAEVL,MAAAA,IAAI,EAAEO;AAFI,KAAd;AAIH,GApJmC,CAuJpC;;;AACAO,EAAAA,MAAM,CAACd,IAAD,EAAM;AACR,QAAIqB,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,aAAZ,EAA2BvB,IAA3B;AACA,WAAOqB,IAAP;AACD;;AAGDO,EAAAA,UAAU,GAAG;AACX/C,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiD,KAAK+C,IAAtD;AACH;;AAGDC,EAAAA,MAAM,GAAE;AACJ,QAAG,KAAKrC,KAAL,CAAWW,YAAd,EAA2B;AACvB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,QAAG,CAAC,KAAK1B,KAAL,CAAWqD,QAAf,EAAwB;AACpB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,QAAIC,OAAJ;AACA,QAAIC,KAAJ;;AACA,QAAG,KAAKxC,KAAL,CAAWG,SAAd,EAAwB;AACpBoC,MAAAA,OAAO,gBAAG,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAV;AACAC,MAAAA,KAAK,GAAG,cAAR;AACH,KAHD,MAII;AACAD,MAAAA,OAAO,gBAAG,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAV;AACA,UAAIE,SAAS,gBAAG,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAC,QAAvC;AAAgD,QAAA,OAAO,EAAE,KAAK/B,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAhB;AACA8B,MAAAA,KAAK,GAAG,kBAAR;AAEH;;AAED,QAAIzC,GAAJ;;AACA,QAAG,KAAKC,KAAL,CAAWC,KAAX,KAAqB,EAAxB,EAA2B;AACvBF,MAAAA,GAAG,gBAAE;AAAK,QAAA,GAAG,EAAE2C,OAAO,CAAC,kCAAD,CAAjB;AAAuD,QAAA,SAAS,EAAC,cAAjE;AAAgF,QAAA,EAAE,EAAC,UAAnF;AAA8F,QAAA,GAAG,EAAC,eAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAL;AAEH;;AAED,wBACA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAE,KAAKvB,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,CADJ,eAII,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCsB,SADD,CAJJ,CADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAL,CAVJ,eAaI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,YAAX;AAAwB,MAAA,QAAQ,EAAE,KAAKtD,eAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEd,GAAhB;AAAqB,MAAA,SAAS,EAAC,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,EAAE,EAAC,GAAtB;AAA0B,MAAA,SAAS,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,IAAI,EAAC,MAA/B;AAAsC,MAAA,KAAK,EAAE,KAAK4B,KAAL,CAAWT,IAAxD;AAA8D,MAAA,QAAQ,EAAE,KAAKyB,iBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAFJ,CADA,eAQA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAE5C,GAAhB;AAAqB,MAAA,SAAS,EAAC,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,EAAE,EAAC,IAAtB;AAA2B,MAAA,SAAS,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CARA,eAWA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEA,GAAhB;AAAqB,MAAA,SAAS,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,EAAE,EAAC,cAAd;AAA6B,MAAA,KAAK,EAAC,cAAnC;AAAkD,MAAA,MAAM,EAAC,SAAzD;AAAmE,MAAA,QAAQ,EAAE,KAAKgD,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAGI;AAAK,MAAA,GAAG,EAAE,KAAKpB,KAAL,CAAWC,KAArB;AAA4B,MAAA,SAAS,EAAC,cAAtC;AAAqD,MAAA,EAAE,EAAC,SAAxD;AAAkE,MAAA,GAAG,EAAC,eAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAMI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAE0C,GAAG,IAAI,KAAKP,IAAL,GAAYO,GAAlC;AACU,MAAA,KAAK,EAAE,KAAK3C,KAAL,CAAWY,KAD5B;AAEU,MAAA,aAAa,EAAE,IAFzB;AAGU,MAAA,QAAQ,EAAE,CAHpB;AAIU,MAAA,MAAM,EAAC,MAJjB;AAKU,MAAA,MAAM,EAAE,MAAM,KAAKuB,UAAL,EALxB;AAMU,MAAA,aAAa,EAAGS,SAAD,IAAe;AAC1B;AACA,aAAKpB,QAAL,CAAc;AACVZ,UAAAA,KAAK,EAAEgC,SAAS,CAACC,GAAV,CAAcC,QAAQ,IAAIA,QAAQ,CAACvC,IAAnC;AADG,SAAd;AAGH,OAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAXA,eAiCA,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,SAAS,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEnC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,EAAE,EAAC,GAAtB;AAA0B,MAAA,SAAS,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,IAAI,EAAC,MAA/B;AAAsC,MAAA,KAAK,EAAE,KAAK4B,KAAL,CAAWL,IAAxD;AAA8D,MAAA,QAAQ,EAAE,KAAKqB,iBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAFJ,CADJ,CADJ,eAUI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAE5C,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,EAAE,EAAC,GAAtB;AAA0B,MAAA,SAAS,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,IAAI,EAAC,MAA/B;AAAsC,MAAA,KAAK,EAAE,KAAK4B,KAAL,CAAWJ,IAAxD;AAA8D,MAAA,QAAQ,EAAE,KAAKoB,iBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAFJ,CADJ,CAVJ,CAjCA,eAqDA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,aAAnB;AAAiC,MAAA,EAAE,EAAC,UAApC;AAA+C,MAAA,IAAI,EAAC,GAApD;AAAwD,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWH,WAA1E;AAAuF,MAAA,QAAQ,EAAE,KAAKmB,iBAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CArDA,eA0DA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,YAAnB;AAAgC,MAAA,EAAE,EAAC,UAAnC;AAA8C,MAAA,IAAI,EAAC,GAAnD;AAAuD,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWF,UAAzE;AAAqF,MAAA,QAAQ,EAAE,KAAKkB,iBAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CA1DA,EA+DCuB,OA/DD,CAbJ,eAgFI,oBAAC,KAAD;AACJ,MAAA,IAAI,EAAE,KAAKvC,KAAL,CAAWU,SADb;AAEJ,MAAA,MAAM,EAAE,KAAKQ,WAFT;AAGJ,MAAA,QAAQ,EAAC,QAHL;AAIJ,MAAA,QAAQ,EAAE,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMJ,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CANI,eASJ,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDATI,eAYJ,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAE,KAAKA,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,KAAKjD,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CAZI,CAhFJ,CADA;AA0GH;;AAxSmC,C,CA4SxC;;;AACA,MAAM8E,kBAAkB,GAAG;AACvB/E,EAAAA,SADuB;AAEvBC,EAAAA,YAFuB;AAGvBC,EAAAA,UAHuB;AAIvBC,EAAAA;AAJuB,CAA3B;;AAOA,MAAM6E,eAAe,GAAGhD,KAAK,KAAK;AAC9B0B,EAAAA,KAAK,EAAE1B,KAAK,CAAC0B,KADiB;AAE9BY,EAAAA,QAAQ,EAAEtC,KAAK,CAACiD;AAFc,CAAL,CAA7B;;AAKA,eAAelF,OAAO,CAACiF,eAAD,EAAiBD,kBAAjB,CAAP,CAA4CjE,UAA5C,CAAf","sourcesContent":["//Recipe Form can display edit mode and create a new recipe\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addRecipe, deleteRecipe, editRecipe, userInfo} from '../redux/actions';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Holder} from './holder.svg';\r\n\r\n\r\n\r\n//FilePond\r\nimport { FilePond, registerPlugin } from 'react-filepond';\r\n\r\n// Import FilePond styles\r\nimport 'filepond/dist/filepond.min.css';\r\n\r\n\r\n//FilePond Plugins\r\nimport FilePondPluginFileEncode from 'filepond-plugin-file-encode';\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\r\n\r\n// Register the plugins\r\nregisterPlugin(FilePondPluginFileEncode, FilePondPluginImagePreview);\r\n\r\n\r\n\r\nclass RecipeForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            recipe: props.recipe,\r\n            name: props.recipe.name || \"\",\r\n            prep: props.recipe.prep_time || \"\",\r\n            cook: props.recipe.cook_time || \"\",\r\n            ingredients: props.recipe.ingredients || \"\",\r\n            directions: props.recipe.directions || \"\",\r\n            image: props.recipe.image ||\"\",\r\n            file: \"\",\r\n    \r\n            newRecipe: props.newRecipe,\r\n            showModal: false,\r\n            index: props.index,\r\n\r\n            navAllRecipe:false,\r\n\r\n            files: [{\r\n                source: 'index.html',\r\n                options: {\r\n                    type: 'local'\r\n                }\r\n            }]\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.mySubmitHandler = this.mySubmitHandler.bind(this);\r\n        this.addRecipe = this.addRecipe.bind(this);\r\n        this.editRecipe = this.editRecipe.bind(this);\r\n        this.deleteRecipe = this.deleteRecipe.bind(this);\r\n        this.showModal = this.showModal.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.backToAllRecipe = this.backToAllRecipe.bind(this);\r\n        this.previewImage = this.previewImage.bind(this);\r\n        this.upload = this.upload.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        await this.props.userInfo()\r\n    }\r\n\r\n    handleInputChange(e){\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    mySubmitHandler = (event) => {\r\n        console.log('addRecipe has been clicked');\r\n\r\n        event.preventDefault();\r\n        var name = document.forms[\"recipeForm\"][\"name\"].value;\r\n        var prep = document.forms[\"recipeForm\"][\"prep\"].value;\r\n        var cook = document.forms[\"recipeForm\"][\"cook\"].value;\r\n        var ingredients = document.forms[\"recipeForm\"][\"ingredients\"].value;\r\n        var directions = document.forms[\"recipeForm\"][\"directions\"].value;\r\n        var img = this.state.image;\r\n\r\n        if(name===\"\" || prep===\"\" || cook===\"\" || ingredients===\"\" || directions===\"\" ){\r\n            alert(\"Field cannot be empty\");\r\n        }\r\n\r\n        else{\r\n\r\n            var newRecipe= {\r\n                name: name,\r\n                prep_time: prep,\r\n                cook_time: cook,\r\n                ingredients: ingredients.split(\"\\n\"),\r\n                directions: directions,\r\n                image: this.state.file\r\n            }\r\n            if(this.state.newRecipe){\r\n                console.log('making new recipe');\r\n                this.addRecipe(newRecipe); //if new call add recipe\r\n            }\r\n            else{\r\n                console.log('making edits to a recipe');\r\n                this.editRecipe(newRecipe, this.state.index); //else call editRecipe dispatch\r\n            }\r\n        }\r\n      }\r\n\r\n\r\n    async addRecipe(recipe){\r\n        //adds the recipe and then redirects to all recipes\r\n        console.log('addRecipe has been clicked');\r\n        await this.props.addRecipe(recipe);\r\n        if(this.props.added){//check for an error instead (if successful, or token expired attempt back to all recipe)\r\n            //if server error [show the error] on the page so enable it\r\n            this.backToAllRecipe()\r\n        }\r\n    }\r\n\r\n    async editRecipe(recipe, index){\r\n        //edits the recipe and then redirects to all recipes\r\n        console.log('addRecipe has been clicked');\r\n        await this.props.editRecipe(recipe,index);\r\n        if(this.props.added){\r\n            this.backToAllRecipe()\r\n        }\r\n    }\r\n\r\n    async deleteRecipe(){\r\n        console.log(this.state.recipe._id);\r\n        await this.props.deleteRecipe(this.state.recipe._id, this.state.index); //pass entry id\r\n        //call the delete api call here\r\n        this.handleClose();\r\n        //navigate to viewallrecipes\r\n        this.backToAllRecipe();\r\n\r\n    }\r\n\r\n    showModal(){\r\n        this.setState({\r\n            showModal:true\r\n        })\r\n    }\r\n  \r\n    handleClose(){\r\n        this.setState({\r\n            showModal: false\r\n        })\r\n    }\r\n\r\n    backToAllRecipe(){\r\n        this.setState({\r\n            navAllRecipe:true\r\n        })\r\n    }\r\n\r\n\r\n    //upload image\r\n    previewImage(event){\r\n        //allows the user to submit an image from their files\r\n        console.log(event.target.files[0]);\r\n        let data = new FormData();\r\n        data.append('RecipeImage', event.target.files[0]);\r\n        var options = {image: data}\r\n        data.forEach((value, key) => {\r\n            console.log(\"key %s: value %s\", key, value);\r\n            })\r\n        \r\n        this.setState({\r\n            image: URL.createObjectURL(event.target.files[0]),\r\n            file: options\r\n          })\r\n    }\r\n\r\n\r\n    //changes image to base64 string\r\n    upload(file){\r\n        let data = new FormData();\r\n        data.append('RecipeImage', file);\r\n        return data\r\n      };\r\n\r\n\r\n      handleInit() {\r\n        console.log('FilePond instance has initialised', this.pond);\r\n    }\r\n\r\n\r\n    render(){\r\n        if(this.state.navAllRecipe){\r\n            return <Redirect to=\"/viewRecipes\"/>\r\n        }\r\n        if(!this.props.loggedIn){\r\n            return <Redirect to=\"/landing\"/>\r\n        }\r\n        var buttons;\r\n        var title;\r\n        if(this.state.newRecipe){\r\n            buttons = <Button type=\"submit\" className=\"btn-bblue\">Add Recipe</Button>;\r\n            title = \"Add a Recipe\";\r\n        }\r\n        else{\r\n            buttons = <Button type=\"submit\" className=\"btn-bblue\">Save</Button>;\r\n            var deleteBtn = <Button className=\"btn-delete\" variant=\"danger\" onClick={this.showModal}>Delete</Button>;\r\n            title = \"Editing a Recipe\";\r\n\r\n        }\r\n\r\n        var img;\r\n        if(this.state.image === \"\"){\r\n            img =<img src={require('../images/no-image-available.png')} className=\"recipe-image\" id=\"practice\" alt=\"No file found\"/>;\r\n\r\n        }\r\n\r\n        return(\r\n        <div className=\"form editRecipe\">\r\n            <Row className=\"spacing\">\r\n                <Col>\r\n                <Button className=\"btn-bblue\" onClick={this.backToAllRecipe}>Back To Recipe</Button>\r\n                </Col>\r\n                <Col className=\"right\">\r\n                {deleteBtn}\r\n                </Col>\r\n            </Row>\r\n\r\n            <h1>{title}</h1>\r\n\r\n\r\n            <Form name=\"recipeForm\" onSubmit={this.mySubmitHandler}>\r\n            <Form.Group as={Row} className=\"left-text spacing\">\r\n                <Form.Label column sm=\"2\" className=\"title\">Recipe Name</Form.Label>\r\n                <Col sm=\"10\">\r\n                <Form.Control type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleInputChange}></Form.Control>\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} className=\"left-text spacing\">\r\n                <Form.Label column sm=\"12\" className=\"title\">Image Upload</Form.Label>\r\n            </Form.Group>\r\n            <Form.Group as={Row} className=\"left-text\">\r\n                <Form.File id=\"recipe_image\" label=\"Upload Image\" accept=\"image/*\" onChange={this.previewImage}>\r\n                </Form.File>\r\n                <img src={this.state.image} className=\"recipe-image\" id=\"preview\" alt=\"No file found\"/>\r\n                \r\n\r\n                <FilePond ref={ref => this.pond = ref}\r\n                          files={this.state.files}\r\n                          allowMultiple={true}\r\n                          maxFiles={3}\r\n                          server=\"/api\"\r\n                          oninit={() => this.handleInit() }\r\n                          onupdatefiles={(fileItems) => {\r\n                              // Set current file objects to this.state\r\n                              this.setState({\r\n                                  files: fileItems.map(fileItem => fileItem.file)\r\n                              });\r\n                          }}>\r\n                </FilePond>\r\n\r\n            </Form.Group>\r\n\r\n            <Form.Row className=\"left-text spacing\">\r\n                <Col>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm=\"4\" className=\"title\">Prep Time:</Form.Label>\r\n                        <Col sm=\"7\">\r\n                        <Form.Control name=\"prep\" type=\"text\" value={this.state.prep} onChange={this.handleInputChange}></Form.Control> \r\n                        </Col>\r\n                    </Form.Group>\r\n                </Col>\r\n\r\n                <Col>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm=\"4\" className=\"title\">Cook Time:</Form.Label>\r\n                        <Col sm=\"7\">\r\n                        <Form.Control name=\"cook\" type=\"text\" value={this.state.cook} onChange={this.handleInputChange}></Form.Control>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Form.Row>\r\n\r\n            <Form.Group className=\"left-text spacing\">\r\n            <Form.Label className=\"title\">Ingredients: </Form.Label>\r\n                <Form.Control name=\"ingredients\" as=\"textarea\" rows=\"4\" value={this.state.ingredients} onChange={this.handleInputChange}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"left-text spacing\">\r\n            <Form.Label className=\"title\">Directions</Form.Label>\r\n                <Form.Control name=\"directions\" as=\"textarea\" rows=\"4\" value={this.state.directions} onChange={this.handleInputChange}></Form.Control>\r\n            </Form.Group>\r\n\r\n            {buttons}\r\n            </Form>\r\n\r\n\r\n            <Modal\r\n        show={this.state.showModal}\r\n        onHide={this.handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Recipe</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Are you sure you want to delete this recipe?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleClose}>\r\n            No\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.deleteRecipe}>Yes</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n\r\n\r\n        </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n//connect redux dispatch here\r\nconst mapDispatchToProps = {\r\n    addRecipe,\r\n    deleteRecipe,\r\n    editRecipe,\r\n    userInfo\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    added: state.added,\r\n    loggedIn: state.logged_in\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(RecipeForm);"]},"metadata":{},"sourceType":"module"}