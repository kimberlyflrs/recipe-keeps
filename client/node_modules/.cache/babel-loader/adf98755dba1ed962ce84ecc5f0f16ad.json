{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kim\\\\Documents\\\\GitHub\\\\recipe-keeps\\\\client\\\\src\\\\pages\\\\ViewAllRecipe.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header.js';\nimport RecipeCard from '../components/RecipeCard.js';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Footer from '../components/Footer.js';\nimport { Redirect } from 'react-router-dom';\nimport { userInfo } from '../redux/actions.js'; //add recipe button takes you to the add recipe page\n\nclass ViewAllRecipe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navAddRecipe: false,\n      navRecipe: false //use this so when a card is clicked we take them to the corresponding card\n\n    };\n    this.addRecipe = this.addRecipe.bind(this);\n  }\n\n  async componentDidMount() {\n    console.log('view all recipe already mounted');\n    await this.props.userInfo();\n  }\n\n  addRecipe() {\n    //navigates to the add recipe page\n    this.setState({\n      navAddRecipe: true\n    });\n  }\n\n  render() {\n    //this.props.userInfo();\n    var content;\n\n    if (this.state.navAddRecipe) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/addRecipe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 20\n        }\n      });\n    }\n\n    if (!this.props.logged_in) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/landing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 20\n        }\n      });\n    }\n\n    if (this.props.all_recipes.length === 0) {\n      content = /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 23\n        }\n      }, \"No recipes\");\n    } else {\n      content = this.props.all_recipes.map((x, i) => /*#__PURE__*/React.createElement(RecipeCard, {\n        key: x._id,\n        id: x._id,\n        recipe: x,\n        index: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      })); //key must be unique error\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"spacing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      sm: 12,\n      m: 9,\n      lg: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, \"All Recipes\")), /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      sm: 6,\n      m: 3,\n      lg: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-edit\",\n      onClick: this.addRecipe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, \"Add Recipe\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-edit\",\n      onClick: this.addRecipe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, \"Sort/Filter\")), /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      sm: 6,\n      m: 3,\n      lg: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-edit\",\n      onClick: this.addRecipe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \"Sort/Filter\"))), /*#__PURE__*/React.createElement(Row, {\n      className: \"center2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, content)), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  all_recipes: state.recipes,\n  logged_in: state.logged_in\n});\n\nconst mapDispatchToProps = {\n  userInfo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewAllRecipe);","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/recipe-keeps/client/src/pages/ViewAllRecipe.js"],"names":["React","connect","Header","RecipeCard","Container","Row","Col","Button","Footer","Redirect","userInfo","ViewAllRecipe","Component","constructor","props","state","navAddRecipe","navRecipe","addRecipe","bind","componentDidMount","console","log","setState","render","content","logged_in","all_recipes","length","map","x","i","_id","mapStateToProps","recipes","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Header from '../components/Header.js';\r\nimport RecipeCard from '../components/RecipeCard.js';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Footer from '../components/Footer.js';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\nimport { userInfo } from '../redux/actions.js';\r\n\r\n//add recipe button takes you to the add recipe page\r\n\r\nclass ViewAllRecipe extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            navAddRecipe: false,\r\n            navRecipe: false, //use this so when a card is clicked we take them to the corresponding card\r\n        }\r\n        this.addRecipe = this.addRecipe.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        console.log('view all recipe already mounted');\r\n        await this.props.userInfo();\r\n    }\r\n    \r\n\r\n    addRecipe(){\r\n        //navigates to the add recipe page\r\n        this.setState({\r\n            navAddRecipe: true\r\n        })\r\n    }\r\n\r\n    render(){\r\n        //this.props.userInfo();\r\n        var content; \r\n        if(this.state.navAddRecipe){\r\n            return <Redirect to=\"/addRecipe\"/>\r\n        }\r\n        if(!this.props.logged_in){\r\n            return <Redirect to=\"/landing\"/>\r\n        }\r\n        if(this.props.all_recipes.length === 0){\r\n            content = <h2>No recipes</h2>\r\n        }\r\n        else{\r\n\r\n            content = this.props.all_recipes.map((x, i)=>\r\n            <RecipeCard key={x._id} id={x._id} recipe={x} index={i}/>); //key must be unique error\r\n        }\r\n        return(\r\n            <div>\r\n            <Header/>\r\n            <Container fluid className=\"padding\">\r\n                <Row className=\"spacing\">\r\n                    <Col xs={12} sm={12} m={9} lg={9}>\r\n                        <h1>All Recipes</h1>\r\n                    </Col>\r\n                    <Col xs={6} sm={6} m={3} lg={3}>\r\n                        <Button className=\"btn-edit\" onClick={this.addRecipe}>Add Recipe</Button>\r\n                        <Button className=\"btn-edit\" onClick={this.addRecipe}>Sort/Filter</Button>\r\n                    </Col>\r\n                    <Col xs={6} sm={6} m={3} lg={3}>\r\n                        <Button className=\"btn-edit\" onClick={this.addRecipe}>Sort/Filter</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"center2\">\r\n                    {content}\r\n                </Row>\r\n            </Container>\r\n            <Footer/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    all_recipes: state.recipes,\r\n    logged_in: state.logged_in\r\n  });\r\n\r\n  const mapDispatchToProps = {\r\n    userInfo\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewAllRecipe);"]},"metadata":{},"sourceType":"module"}