{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kimberly Flores\\\\Documents\\\\GitHub\\\\recipe-keeps\\\\client\\\\src\\\\components\\\\Signup.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../redux/actions';\nimport { getFromStorage, setInStorage } from '../utils/storage.js';\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.mySubmitHandler = event => {\n      //checks if inputs are not empty\n      event.preventDefault();\n      var email = document.forms[\"loginForm\"][\"email\"].value;\n      var pass = document.forms[\"loginForm\"][\"password\"].value;\n\n      if (email === \"\" || pass === \"\") {\n        alert(\"Field cannot be empty\");\n      } else {\n        console.log('good to go');\n        this.login(email, pass);\n      }\n    };\n\n    this.state = {\n      new_user: true,\n      info_valid: false,\n      token: ''\n    };\n    this.newUser = this.newUser.bind(this);\n    this.login = this.login.bind(this);\n    this.mySubmitHandler = this.mySubmitHandler.bind(this);\n  } //check the password, (if no match, show error)\n  //check if the account exists (if yes, show error)(else make account)\n  //\n\n\n  componentDidMount() {\n    //we will be checking if there is a token present\n    const token = getFromStorage('the_main_app');\n    console.log(token);\n    console.log(this.state);\n\n    if (token) {\n      fetch('/verify?token=' + token).then(res => res.json()).then(json => {\n        if (json.status) {\n          this.setState({\n            info_valid: true,\n            token: token\n          });\n          console.log('i set the token');\n        } else {\n          console.log('whoops');\n          this.setState({\n            info_valid: false\n          });\n        }\n      });\n    } else {\n      console.log('no token available');\n    }\n  } //make function to change login to signup\n\n\n  newUser() {\n    this.setState({\n      new_user: !this.state.new_user\n    });\n    console.log(this.state.new_user);\n  } //login\n\n\n  login(email, password) {\n    //attempt to find user with this info call the login prop\n    //if found\n\n    /*this.props.login();\r\n        this.setState({\r\n            info_valid: true\r\n        })*/\n    console.log(\"here it's the login function\");\n    fetch('/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: document.forms[\"loginForm\"][\"email\"].value,\n        password: document.forms[\"loginForm\"][\"password\"].value\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n\n      if (data.status) {\n        setInStorage('the_main_app', {\n          token: data.token\n        });\n        this.setState({\n          token: data.token,\n          new_user: false,\n          info_valid: true\n        });\n      } else {\n        console.log('Error: ' + data.message);\n      }\n    }); //else show error\n    //else show error\n  }\n\n  render() {\n    if (this.state.token) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/viewRecipes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 20\n        }\n      });\n    }\n\n    if (this.state.new_user) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, \"Login\"), /*#__PURE__*/React.createElement(Form, {\n        name: \"loginForm\",\n        onSubmit: this.mySubmitHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter Email\",\n        name: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Enter Password\",\n        name: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      }, \"Login\")), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.newUser(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      }, \"New to RecipeKeeps? Sign Up\"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter Email\",\n      name: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Enter Password\",\n      name: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      name: \"confirmPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, \"Create Account\")), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.newUser(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, \"Already have an account? Login \"));\n  }\n\n}\n\nconst mapDispatchToProps = {\n  login\n};\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/Kimberly Flores/Documents/GitHub/recipe-keeps/client/src/components/Signup.js"],"names":["React","Form","Button","Redirect","connect","login","getFromStorage","setInStorage","SignUp","Component","constructor","props","mySubmitHandler","event","preventDefault","email","document","forms","value","pass","alert","console","log","state","new_user","info_valid","token","newUser","bind","componentDidMount","fetch","then","res","json","status","setState","password","method","headers","body","JSON","stringify","data","message","render","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../redux/actions';\r\nimport { getFromStorage, setInStorage} from '../utils/storage.js';\r\n\r\n\r\nclass SignUp extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            new_user: true,\r\n            info_valid:false,\r\n            token: ''\r\n        }\r\n        this.newUser = this.newUser.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.mySubmitHandler = this.mySubmitHandler.bind(this);\r\n    }\r\n\r\n    //check the password, (if no match, show error)\r\n    //check if the account exists (if yes, show error)(else make account)\r\n    //\r\n\r\n    componentDidMount(){\r\n        //we will be checking if there is a token present\r\n        const token = getFromStorage('the_main_app');\r\n        console.log(token);\r\n        console.log(this.state);\r\n        if(token){\r\n            fetch('/verify?token='+token)\r\n            .then(res=>res.json())\r\n            .then(json => {\r\n                if(json.status){\r\n                    this.setState({\r\n                        info_valid:true,\r\n                        token: token,\r\n                    })\r\n                    console.log('i set the token');\r\n                }\r\n                else{\r\n                    console.log('whoops');\r\n                    this.setState({\r\n                        info_valid:false\r\n                    })\r\n                }\r\n            })\r\n        }else{\r\n            console.log('no token available');\r\n        }\r\n    }\r\n\r\n    //make function to change login to signup\r\n    newUser(){\r\n        this.setState({\r\n            new_user: !(this.state.new_user)\r\n        })\r\n        console.log(this.state.new_user);\r\n    }\r\n\r\n    //login\r\n    login(email, password){\r\n    //attempt to find user with this info call the login prop\r\n    //if found\r\n    /*this.props.login();\r\n        this.setState({\r\n            info_valid: true\r\n        })*/\r\n    console.log(\"here it's the login function\");\r\n    fetch('/login', {\r\n        method:'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            email: document.forms[\"loginForm\"][\"email\"].value,\r\n            password: document.forms[\"loginForm\"][\"password\"].value\r\n        })\r\n    }).then(res =>res.json())\r\n    .then(data => {\r\n        console.log(data);\r\n        if(data.status){\r\n            setInStorage('the_main_app', {token: data.token});\r\n            this.setState({\r\n                token: data.token,\r\n                new_user:false,\r\n                info_valid: true\r\n            })\r\n        }\r\n        else{\r\n            console.log('Error: '+data.message)\r\n        }\r\n    })\r\n    //else show error\r\n    //else show error\r\n\r\n    }\r\n\r\n    mySubmitHandler = (event) => {\r\n        //checks if inputs are not empty\r\n        event.preventDefault();\r\n        var email = document.forms[\"loginForm\"][\"email\"].value;\r\n        var pass = document.forms[\"loginForm\"][\"password\"].value;\r\n\r\n        if(email===\"\" || pass===\"\"){\r\n            alert(\"Field cannot be empty\");\r\n        }\r\n        else{\r\n            console.log('good to go');\r\n            this.login(email,pass);\r\n        }\r\n      }\r\n\r\n    render(){\r\n        if(this.state.token){\r\n            return <Redirect to=\"/viewRecipes\"/>\r\n        }\r\n        if (this.state.new_user){\r\n            return(\r\n                <div className=\"form\">\r\n                    <h1>Login</h1>\r\n                    <Form name=\"loginForm\" onSubmit={this.mySubmitHandler}>\r\n                        <Form.Group>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter Email\" name=\"email\"></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Enter Password\" name=\"password\"></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type=\"submit\">Login</Button>\r\n                    </Form>\r\n                    <button onClick={()=>this.newUser()}>New to RecipeKeeps? Sign Up</button>\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div className=\"form\">\r\n                <h1>Sign Up</h1>\r\n                <Form>\r\n                    <Form.Group>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter Email\" name=\"email\"></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Enter Password\" name=\"password\"></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Confirm Password\" name=\"confirmPassword\"></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button>Create Account</Button>\r\n                </Form>\r\n                <button onClick={()=>this.newUser()}>Already have an account? Login </button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    login\r\n};\r\n\r\nexport default connect(null,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}