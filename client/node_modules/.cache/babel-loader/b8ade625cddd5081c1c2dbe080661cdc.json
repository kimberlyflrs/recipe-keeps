{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kim\\\\Documents\\\\GitHub\\\\recipe-keeps\\\\client\\\\src\\\\pages\\\\ViewAllRecipe.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header.js';\nimport RecipeCard from '../components/RecipeCard.js';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Footer from '../components/Footer.js';\nimport Loading from '../components/Loading.js';\nimport { Redirect } from 'react-router-dom';\nimport { userInfo, loading } from '../redux/actions.js'; //add recipe button takes you to the add recipe page\n\nclass ViewAllRecipe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navAddRecipe: false,\n      navRecipe: false //use this so when a card is clicked we take them to the corresponding card\n\n    };\n    this.addRecipe = this.addRecipe.bind(this);\n  }\n\n  async componentDidMount() {\n    console.log('view all recipe already mounted');\n    this.props.loading();\n    await this.props.userInfo();\n  }\n\n  addRecipe() {\n    //navigates to the add recipe page\n    this.setState({\n      navAddRecipe: true\n    });\n  }\n\n  render() {\n    console.log('view all recipe page');\n    var content;\n\n    if (this.state.navAddRecipe) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/addRecipe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 20\n        }\n      });\n    }\n\n    if (!this.props.logged_in) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/landing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 20\n        }\n      });\n    }\n\n    if (this.props.all_recipes.length === 0) {\n      content = /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 23\n        }\n      }, \"No recipes\");\n    } else {\n      content = this.props.all_recipes.map((x, i) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(RecipeCard, {\n        key: x._id,\n        id: x._id,\n        recipe: x,\n        index: i,\n        image: x.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      })));\n    }\n\n    if (this.props.isLoading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        className: \"padding\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"spacing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 12,\n        sm: 12,\n        m: 12,\n        lg: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      })))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        className: \"padding\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"spacing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 12,\n        sm: 12,\n        m: 12,\n        lg: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }, \"All Recipes\"))), /*#__PURE__*/React.createElement(Row, {\n        className: \"spacing center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 6,\n        sm: 6,\n        m: 6,\n        lg: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-edit\",\n        onClick: this.addRecipe,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, \"Add Recipe\")), /*#__PURE__*/React.createElement(Col, {\n        xs: 6,\n        sm: 6,\n        m: 6,\n        lg: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-edit\",\n        onClick: this.addRecipe,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }, \"Sort/Filter\"))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, content)), /*#__PURE__*/React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  all_recipes: state.recipes,\n  logged_in: state.logged_in,\n  isLoading: state.isLoading\n});\n\nconst mapDispatchToProps = {\n  userInfo,\n  loading\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewAllRecipe);","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/recipe-keeps/client/src/pages/ViewAllRecipe.js"],"names":["React","connect","Header","RecipeCard","Container","Row","Col","Button","Footer","Loading","Redirect","userInfo","loading","ViewAllRecipe","Component","constructor","props","state","navAddRecipe","navRecipe","addRecipe","bind","componentDidMount","console","log","setState","render","content","logged_in","all_recipes","length","map","x","i","_id","image","isLoading","mapStateToProps","recipes","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Header from '../components/Header.js';\r\nimport RecipeCard from '../components/RecipeCard.js';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Footer from '../components/Footer.js';\r\nimport Loading from '../components/Loading.js';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\nimport { userInfo, loading } from '../redux/actions.js';\r\n\r\n//add recipe button takes you to the add recipe page\r\n\r\nclass ViewAllRecipe extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            navAddRecipe: false,\r\n            navRecipe: false, //use this so when a card is clicked we take them to the corresponding card\r\n        }\r\n        this.addRecipe = this.addRecipe.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        console.log('view all recipe already mounted');\r\n        this.props.loading();\r\n        await this.props.userInfo();\r\n    }\r\n    \r\n\r\n    addRecipe(){\r\n        //navigates to the add recipe page\r\n        this.setState({\r\n            navAddRecipe: true\r\n        })\r\n    }\r\n\r\n    render(){\r\n        console.log('view all recipe page');\r\n        var content; \r\n        if(this.state.navAddRecipe){\r\n            return <Redirect to=\"/addRecipe\"/>\r\n        }\r\n        if(!this.props.logged_in){\r\n            return <Redirect to=\"/landing\"/>\r\n        }\r\n        if(this.props.all_recipes.length === 0){\r\n            content = <h2>No recipes</h2>\r\n        }\r\n        else{\r\n\r\n            content = this.props.all_recipes.map((x, i)=>\r\n                <div className=\"center2\">\r\n                <RecipeCard key={x._id} id={x._id} recipe={x} index={i} image={x.image}/>\r\n                </div>\r\n            );\r\n        }\r\n        if(this.props.isLoading){\r\n            return(\r\n            <div>\r\n                <Header/>\r\n                <Container fluid className=\"padding\">\r\n                    <Row className=\"spacing\">\r\n                        <Col xs={12} sm={12} m={12} lg={12}>\r\n                            <Loading/>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>)\r\n        }\r\n        else{\r\n        return(\r\n            <div>\r\n            <Header/>\r\n            <Container fluid className=\"padding\">\r\n                <Row className=\"spacing\">\r\n                    <Col xs={12} sm={12} m={12} lg={12}>\r\n                        <h1>All Recipes</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"spacing center\">\r\n                    <Col xs={6} sm={6} m={6} lg={6}>\r\n                    <Button className=\"btn-edit\" onClick={this.addRecipe}>Add Recipe</Button>\r\n                    </Col>\r\n                    <Col xs={6} sm={6} m={6} lg={6}>\r\n                        <Button className=\"btn-edit\" onClick={this.addRecipe}>Sort/Filter</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {content}\r\n                </Row>\r\n            </Container>\r\n            <Footer/>\r\n            </div>\r\n        )}\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    all_recipes: state.recipes,\r\n    logged_in: state.logged_in,\r\n    isLoading: state.isLoading\r\n  });\r\n\r\n  const mapDispatchToProps = {\r\n    userInfo,\r\n    loading\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewAllRecipe);"]},"metadata":{},"sourceType":"module"}