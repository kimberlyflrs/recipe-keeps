{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport thunk from 'redux-thunk';\nimport * as storage from 'redux-storage';\nimport createEngine from 'redux-storage-engine-localstorage';\nconst reducer = storage.reducer(rootReducer);\nconst engine = createEngine('recipe-keeps');\nconst middleware = storage.createMiddleware(engine);\nconst createStoreWithMiddleware = applyMiddleware(middleware)(createStore);\nconst store = createStoreWithMiddleware(reducer);\nconst load = storage.createLoader(engine);\nload(store).then(newState => console.log('Loaded state:', newState)).catch(() => console.log('Failed to load previous state')); //const store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/recipe-keeps/client/src/redux/store.js"],"names":["createStore","applyMiddleware","rootReducer","thunk","storage","createEngine","reducer","engine","middleware","createMiddleware","createStoreWithMiddleware","store","load","createLoader","then","newState","console","log","catch"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AAGA,MAAMC,OAAO,GAAGF,OAAO,CAACE,OAAR,CAAgBJ,WAAhB,CAAhB;AACA,MAAMK,MAAM,GAAGF,YAAY,CAAC,cAAD,CAA3B;AACA,MAAMG,UAAU,GAAGJ,OAAO,CAACK,gBAAR,CAAyBF,MAAzB,CAAnB;AACA,MAAMG,yBAAyB,GAAGT,eAAe,CAACO,UAAD,CAAf,CAA4BR,WAA5B,CAAlC;AAEA,MAAMW,KAAK,GAAGD,yBAAyB,CAACJ,OAAD,CAAvC;AACA,MAAMM,IAAI,GAAGR,OAAO,CAACS,YAAR,CAAqBN,MAArB,CAAb;AACAK,IAAI,CAACD,KAAD,CAAJ,CACGG,IADH,CACSC,QAAD,IAAcC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,QAA7B,CADtB,EAEGG,KAFH,CAES,MAAMF,OAAO,CAACC,GAAR,CAAY,+BAAZ,CAFf,E,CAKA;;AAEA,eAAeN,KAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from 'redux-thunk';\r\nimport * as storage from 'redux-storage';\r\nimport createEngine from 'redux-storage-engine-localstorage';\r\n\r\n\r\nconst reducer = storage.reducer(rootReducer);\r\nconst engine = createEngine('recipe-keeps');\r\nconst middleware = storage.createMiddleware(engine);\r\nconst createStoreWithMiddleware = applyMiddleware(middleware)(createStore);\r\n\r\nconst store = createStoreWithMiddleware(reducer);\r\nconst load = storage.createLoader(engine);\r\nload(store)\r\n  .then((newState) => console.log('Loaded state:', newState))\r\n  .catch(() => console.log('Failed to load previous state'));\r\n\r\n\r\n//const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}