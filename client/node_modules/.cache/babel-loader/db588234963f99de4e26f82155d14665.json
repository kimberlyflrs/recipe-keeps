{"ast":null,"code":"import { ADD_RECIPE, DELETE_RECIPE, EDIT_RECIPE, LOGIN, LOGOUT, DELETE_ACCOUNT } from './actionType';\nimport axios from 'axios';\nexport const addRecipe = recipe => ({\n  type: ADD_RECIPE,\n  recipe: recipe\n});\nexport const deleteRecipe = index => ({\n  type: DELETE_RECIPE,\n  index: index\n});\nexport const editRecipe = (recipe, index) => ({\n  type: EDIT_RECIPE,\n  recipe: recipe,\n  index: index\n});\n\nfunction userInfo() {\n  //gets the user info from db\n  if (localStorage.token) {\n    console.log(localStorage.token);\n    setAuth(localstorage.token);\n  } //call the api to get user info\n\n\n  try {\n    console.log('we are getting the user info rn');\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport function login(email, password) {\n  console.log('we are starting');\n  return async dispatch => {\n    try {\n      const res = await axios.post('/login', {\n        \"email\": email,\n        \"password\": password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('out of res');\n      dispatch({\n        type: LOGIN,\n        payload: res.data\n      }); //load the user info\n\n      userInfo();\n    } catch (error) {\n      console.log('error caught in action.js');\n    }\n    /*{\r\n    type: LOGIN,\r\n    email: email,\r\n    password: password\r\n    }*/\n\n  };\n}\nexport const logout = () => ({\n  type: LOGOUT\n});\nexport const deleteAccount = () => ({\n  type: DELETE_ACCOUNT\n});","map":{"version":3,"sources":["C:/Users/Kimberly Flores/Documents/GitHub/recipe-keeps/client/src/redux/actions.js"],"names":["ADD_RECIPE","DELETE_RECIPE","EDIT_RECIPE","LOGIN","LOGOUT","DELETE_ACCOUNT","axios","addRecipe","recipe","type","deleteRecipe","index","editRecipe","userInfo","localStorage","token","console","log","setAuth","localstorage","err","login","email","password","dispatch","res","post","headers","payload","data","error","logout","deleteAccount"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,aAArB,EAAoCC,WAApC,EAAiDC,KAAjD,EAAwDC,MAAxD,EAAgEC,cAAhE,QAAqF,cAArF;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,SAAS,GAAIC,MAAD,KAAa;AAClCC,EAAAA,IAAI,EAAET,UAD4B;AAElCQ,EAAAA,MAAM,EAAEA;AAF0B,CAAb,CAAlB;AAKP,OAAO,MAAME,YAAY,GAAIC,KAAD,KAAY;AACpCF,EAAAA,IAAI,EAAER,aAD8B;AAEpCU,EAAAA,KAAK,EAAEA;AAF6B,CAAZ,CAArB;AAKP,OAAO,MAAMC,UAAU,GAAG,CAACJ,MAAD,EAASG,KAAT,MAAoB;AAC1CF,EAAAA,IAAI,EAAEP,WADoC;AAE1CM,EAAAA,MAAM,EAACA,MAFmC;AAG1CG,EAAAA,KAAK,EAAEA;AAHmC,CAApB,CAAnB;;AAOP,SAASE,QAAT,GAAmB;AACf;AACA,MAAGC,YAAY,CAACC,KAAhB,EAAsB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACC,KAAzB;AACAG,IAAAA,OAAO,CAACC,YAAY,CAACJ,KAAd,CAAP;AACH,GALc,CAMf;;;AACA,MAAG;AACCC,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACH,GAFD,CAGA,OAAMG,GAAN,EAAU;AACNJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH;AACJ;;AAID,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAA+B;AAClCP,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,SAAO,MAAMO,QAAN,IAAiB;AACxB,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,IAAN,CAAW,QAAX,EAClB;AACI,iBAASJ,KADb;AAEI,oBAAYC;AAFhB,OADkB,EAMlB;AACAI,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AADT,OANkB,CAAlB;AAaAX,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEAO,MAAAA,QAAQ,CAAC;AACLf,QAAAA,IAAI,EAAEN,KADD;AAELyB,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,OAAD,CAAR,CAhBA,CAqBA;;AACAhB,MAAAA,QAAQ;AACX,KAvBD,CAwBA,OAAOiB,KAAP,EAAc;AACVd,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH;AAED;;;;;;AAIA,GAjCA;AAkCH;AAED,OAAO,MAAMc,MAAM,GAAG,OAAO;AACzBtB,EAAAA,IAAI,EAAEL;AADmB,CAAP,CAAf;AAOP,OAAO,MAAM4B,aAAa,GAAG,OAAO;AAChCvB,EAAAA,IAAI,EAAEJ;AAD0B,CAAP,CAAtB","sourcesContent":["import { ADD_RECIPE, DELETE_RECIPE, EDIT_RECIPE, LOGIN, LOGOUT, DELETE_ACCOUNT} from './actionType';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const addRecipe = (recipe) => ({\r\n    type: ADD_RECIPE,\r\n    recipe: recipe\r\n})\r\n\r\nexport const deleteRecipe = (index) => ({\r\n    type: DELETE_RECIPE,\r\n    index: index\r\n})\r\n\r\nexport const editRecipe = (recipe, index) => ({\r\n    type: EDIT_RECIPE,\r\n    recipe:recipe,\r\n    index: index\r\n})\r\n\r\n\r\nfunction userInfo(){\r\n    //gets the user info from db\r\n    if(localStorage.token){\r\n        console.log(localStorage.token);\r\n        setAuth(localstorage.token);\r\n    }\r\n    //call the api to get user info\r\n    try{\r\n        console.log('we are getting the user info rn');\r\n    }\r\n    catch(err){\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function login(email, password){\r\n    console.log('we are starting');\r\n    return async(dispatch)=>{\r\n    try {\r\n        const res = await axios.post('/login', \r\n        {\r\n            \"email\": email,\r\n            \"password\": password\r\n            \r\n        },\r\n        {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }   \r\n        );\r\n\r\n        console.log('out of res');\r\n\r\n        dispatch({\r\n            type: LOGIN,\r\n            payload: res.data\r\n        });\r\n\r\n        //load the user info\r\n        userInfo();\r\n    } \r\n    catch (error) {\r\n        console.log('error caught in action.js');\r\n    }\r\n\r\n    /*{\r\n    type: LOGIN,\r\n    email: email,\r\n    password: password\r\n}*/}\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: LOGOUT\r\n})\r\n\r\n\r\n\r\n\r\nexport const deleteAccount = () => ({\r\n    type: DELETE_ACCOUNT\r\n})"]},"metadata":{},"sourceType":"module"}