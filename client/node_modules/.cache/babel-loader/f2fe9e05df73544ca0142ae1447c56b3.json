{"ast":null,"code":"import { ADD_RECIPE, DELETE_RECIPE, EDIT_RECIPE, LOGIN, LOGOUT, LOAD_USER, SIGNUP, VERIFY } from \"../actionType\";\nconst initialState = {\n  logged_in: false,\n  registered: false,\n  added: false,\n  token: \"\",\n  recipes: []\n};\n\nconst recipes = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_RECIPE:\n      {\n        //if things went well true, if token expired then remove it from local storage\n        if (action.payload.status === 200) {\n          return { ...state,\n            added: true,\n            recipes: [...state.recipes, action.payload.recipe]\n          };\n        }\n\n        if (action.payload.status === 401) {\n          localStorage.removeItem('token');\n          return {\n            logged_in: false,\n            registered: false,\n            added: false,\n            token: \"\",\n            recipes: []\n          };\n        } else {\n          console.log(\"recipe error\");\n          return {\n            state\n          };\n        }\n      }\n\n    case DELETE_RECIPE:\n      {\n        if (action.payload.status === 200) {\n          return { ...state,\n            recipes: state.recipes.slice(action.index - 1, action.index).concat(state.recipes.slice(action.index + 1))\n          };\n        }\n\n        if (action.payload.status === 401) {\n          //remove fom localstorage\n          localStorage.removeItem('token');\n          return {\n            logged_in: false,\n            registered: false,\n            added: false,\n            token: \"\",\n            recipes: []\n          };\n        }\n      }\n\n    case EDIT_RECIPE:\n      {\n        //look at the recipe, slice at that point, concat previous point with edit point with end point\n        if (action.payload.status === 200) {\n          return { ...state,\n            recipes: state.recipes.slice(action.index - 1, action.index).concat(action.recipe).concat(state.recipes.slice(action.index + 1))\n          };\n        }\n\n        if (action.payload.status === 401) {\n          localStorage.removeItem('token');\n          return {\n            logged_in: false,\n            registered: false,\n            added: false,\n            token: \"\",\n            recipes: []\n          };\n        }\n      }\n\n    case LOGIN:\n      {\n        if (action.payload.status === 200) {\n          //set the token\n          localStorage.setItem(\"token\", action.payload.acessToken);\n          console.log(\"token has been set \" + action.payload.acessToken);\n          return { ...state,\n            logged_in: true\n          };\n        } else {\n          console.log(\"can't login\");\n          return {\n            state\n          };\n        }\n      }\n\n    case LOGOUT:\n      {\n        //remove the token, sets all user info blank\n        localStorage.removeItem(\"token\");\n        return { ...state,\n          logged_in: false,\n          registered: false,\n          added: false,\n          token: \"\",\n          recipes: []\n        };\n      }\n\n    case LOAD_USER:\n      {\n        //sets the recipe entries into state.recipes\n        return { ...state,\n          recipes: action.payload.message\n        };\n      }\n\n    case VERIFY:\n      {\n        console.log(action.payload.data);\n        return { ...state\n        };\n      }\n\n    case SIGNUP:\n      {\n        //sets registered to true\n        if (action.payload.status === 200) {\n          return { ...state,\n            registered: true\n          };\n        }\n\n        return {\n          state\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default recipes;","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/recipe-keeps/client/src/redux/reducers/index.js"],"names":["ADD_RECIPE","DELETE_RECIPE","EDIT_RECIPE","LOGIN","LOGOUT","LOAD_USER","SIGNUP","VERIFY","initialState","logged_in","registered","added","token","recipes","state","action","type","payload","status","recipe","localStorage","removeItem","console","log","slice","index","concat","setItem","acessToken","message","data"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,aAArB,EAAoCC,WAApC,EAAiDC,KAAjD,EAAwDC,MAAxD,EAAgEC,SAAhE,EAA2EC,MAA3E,EAAmFC,MAAnF,QAAiG,eAAjG;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,KAAK,EAAE,KAHY;AAInBC,EAAAA,KAAK,EAAE,EAJY;AAKnBC,EAAAA,OAAO,EAAE;AALU,CAArB;;AASA,MAAMA,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAiC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,UAAL;AAAiB;AACf;AACA,YAAGe,MAAM,CAACE,OAAP,CAAeC,MAAf,KAAwB,GAA3B,EAA+B;AAC7B,iBAAM,EACJ,GAAGJ,KADC;AAEJH,YAAAA,KAAK,EAAC,IAFF;AAGJE,YAAAA,OAAO,EAAE,CAAC,GAAGC,KAAK,CAACD,OAAV,EAAmBE,MAAM,CAACE,OAAP,CAAeE,MAAlC;AAHL,WAAN;AAKD;;AACD,YAAGJ,MAAM,CAACE,OAAP,CAAeC,MAAf,KAA0B,GAA7B,EAAiC;AAC/BE,UAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACA,iBAAM;AACJZ,YAAAA,SAAS,EAAE,KADP;AAEJC,YAAAA,UAAU,EAAE,KAFR;AAGJC,YAAAA,KAAK,EAAE,KAHH;AAIJC,YAAAA,KAAK,EAAC,EAJF;AAKJC,YAAAA,OAAO,EAAE;AALL,WAAN;AAOD,SATD,MAUI;AACFS,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,iBAAO;AAACT,YAAAA;AAAD,WAAP;AACD;AACF;;AAED,SAAKb,aAAL;AAAmB;AACjB,YAAGc,MAAM,CAACE,OAAP,CAAeC,MAAf,KAAwB,GAA3B,EAA+B;AAC7B,iBAAM,EACJ,GAAGJ,KADC;AAEJD,YAAAA,OAAO,EAAEC,KAAK,CAACD,OAAN,CAAcW,KAAd,CAAoBT,MAAM,CAACU,KAAP,GAAa,CAAjC,EAAoCV,MAAM,CAACU,KAA3C,EAAkDC,MAAlD,CAAyDZ,KAAK,CAACD,OAAN,CAAcW,KAAd,CAAoBT,MAAM,CAACU,KAAP,GAAa,CAAjC,CAAzD;AAFL,WAAN;AAID;;AACD,YAAGV,MAAM,CAACE,OAAP,CAAeC,MAAf,KAAwB,GAA3B,EAA+B;AAC7B;AACAE,UAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACA,iBAAM;AACJZ,YAAAA,SAAS,EAAE,KADP;AAEJC,YAAAA,UAAU,EAAE,KAFR;AAGJC,YAAAA,KAAK,EAAE,KAHH;AAIJC,YAAAA,KAAK,EAAC,EAJF;AAKJC,YAAAA,OAAO,EAAE;AALL,WAAN;AAOD;AACF;;AAED,SAAKX,WAAL;AAAiB;AACf;AACA,YAAGa,MAAM,CAACE,OAAP,CAAeC,MAAf,KAAwB,GAA3B,EAA+B;AAC7B,iBAAM,EACJ,GAAGJ,KADC;AAEJD,YAAAA,OAAO,EAAEC,KAAK,CAACD,OAAN,CAAcW,KAAd,CAAoBT,MAAM,CAACU,KAAP,GAAa,CAAjC,EAAoCV,MAAM,CAACU,KAA3C,EAAkDC,MAAlD,CAAyDX,MAAM,CAACI,MAAhE,EAAwEO,MAAxE,CAA+EZ,KAAK,CAACD,OAAN,CAAcW,KAAd,CAAoBT,MAAM,CAACU,KAAP,GAAa,CAAjC,CAA/E;AAFL,WAAN;AAID;;AACD,YAAGV,MAAM,CAACE,OAAP,CAAeC,MAAf,KAAwB,GAA3B,EAA+B;AAC7BE,UAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACA,iBAAM;AACJZ,YAAAA,SAAS,EAAE,KADP;AAEJC,YAAAA,UAAU,EAAE,KAFR;AAGJC,YAAAA,KAAK,EAAE,KAHH;AAIJC,YAAAA,KAAK,EAAC,EAJF;AAKJC,YAAAA,OAAO,EAAE;AALL,WAAN;AAOD;AAEF;;AAGD,SAAKV,KAAL;AAAW;AACT,YAAGY,MAAM,CAACE,OAAP,CAAeC,MAAf,KAAwB,GAA3B,EAA+B;AAC7B;AACAE,UAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BZ,MAAM,CAACE,OAAP,CAAeW,UAA7C;AACAN,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAsBR,MAAM,CAACE,OAAP,CAAeW,UAAjD;AACA,iBAAO,EAAC,GAAGd,KAAJ;AAAWL,YAAAA,SAAS,EAAC;AAArB,WAAP;AACD,SALD,MAMI;AACFa,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,iBAAO;AAACT,YAAAA;AAAD,WAAP;AACD;AACF;;AAGD,SAAKV,MAAL;AAAY;AACR;AACAgB,QAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACA,eAAO,EAAC,GAAGP,KAAJ;AAAWL,UAAAA,SAAS,EAAC,KAArB;AAA4BC,UAAAA,UAAU,EAAE,KAAxC;AAA+CC,UAAAA,KAAK,EAAC,KAArD;AAA2DC,UAAAA,KAAK,EAAC,EAAjE;AAAqEC,UAAAA,OAAO,EAAC;AAA7E,SAAP;AACH;;AAID,SAAKR,SAAL;AAAe;AACb;AACA,eAAO,EAAC,GAAGS,KAAJ;AAAWD,UAAAA,OAAO,EAACE,MAAM,CAACE,OAAP,CAAeY;AAAlC,SAAP;AACD;;AAED,SAAKtB,MAAL;AAAY;AACVe,QAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACE,OAAP,CAAea,IAA3B;AACA,eAAO,EAAC,GAAGhB;AAAJ,SAAP;AACD;;AAED,SAAKR,MAAL;AAAY;AACV;AACA,YAAGS,MAAM,CAACE,OAAP,CAAeC,MAAf,KAAwB,GAA3B,EAA+B;AAC7B,iBAAO,EAAC,GAAGJ,KAAJ;AAAWJ,YAAAA,UAAU,EAAC;AAAtB,WAAP;AACD;;AACD,eAAO;AAACI,UAAAA;AAAD,SAAP;AACD;;AAED;AACE,aAAOA,KAAP;AA7GJ;AA+GD,CAhHD;;AAkHA,eAAeD,OAAf","sourcesContent":["import { ADD_RECIPE, DELETE_RECIPE, EDIT_RECIPE, LOGIN, LOGOUT, LOAD_USER, SIGNUP, VERIFY } from \"../actionType\";\r\n\r\nconst initialState = {\r\n  logged_in: false,\r\n  registered: false,\r\n  added: false,\r\n  token: \"\",\r\n  recipes: []\r\n};\r\n\r\n\r\nconst recipes = (state = initialState, action) =>{\r\n  switch (action.type) {\r\n    case ADD_RECIPE: {\r\n      //if things went well true, if token expired then remove it from local storage\r\n      if(action.payload.status===200){\r\n        return{\r\n          ...state,\r\n          added:true,\r\n          recipes: [...state.recipes, action.payload.recipe]\r\n        }       \r\n      }\r\n      if(action.payload.status === 401){\r\n        localStorage.removeItem('token');\r\n        return{\r\n          logged_in: false,\r\n          registered: false,\r\n          added: false,\r\n          token:\"\",\r\n          recipes: []   \r\n        }\r\n      }\r\n      else{\r\n        console.log(\"recipe error\");\r\n        return {state}\r\n      }\r\n    }\r\n\r\n    case DELETE_RECIPE:{\r\n      if(action.payload.status===200){\r\n        return{\r\n          ...state,\r\n          recipes: state.recipes.slice(action.index-1, action.index).concat(state.recipes.slice(action.index+1))\r\n        }\r\n      }\r\n      if(action.payload.status===401){\r\n        //remove fom localstorage\r\n        localStorage.removeItem('token');\r\n        return{\r\n          logged_in: false,\r\n          registered: false,\r\n          added: false,\r\n          token:\"\",\r\n          recipes: []\r\n        }\r\n      }\r\n    }\r\n\r\n    case EDIT_RECIPE:{\r\n      //look at the recipe, slice at that point, concat previous point with edit point with end point\r\n      if(action.payload.status===200){\r\n        return{\r\n          ...state,\r\n          recipes: state.recipes.slice(action.index-1, action.index).concat(action.recipe).concat(state.recipes.slice(action.index+1))\r\n        }\r\n      }\r\n      if(action.payload.status===401){\r\n        localStorage.removeItem('token');\r\n        return{\r\n          logged_in: false,\r\n          registered: false,\r\n          added: false,\r\n          token:\"\",\r\n          recipes: []\r\n        }       \r\n      }\r\n\r\n    }\r\n\r\n\r\n    case LOGIN:{\r\n      if(action.payload.status===200){\r\n        //set the token\r\n        localStorage.setItem(\"token\", action.payload.acessToken);\r\n        console.log(\"token has been set \"+action.payload.acessToken);\r\n        return {...state, logged_in:true}\r\n      }\r\n      else{\r\n        console.log(\"can't login\");\r\n        return {state}\r\n      }\r\n    }\r\n\r\n\r\n    case LOGOUT:{\r\n        //remove the token, sets all user info blank\r\n        localStorage.removeItem(\"token\");\r\n        return {...state, logged_in:false, registered: false, added:false,token:\"\", recipes:[]}\r\n    }\r\n\r\n  \r\n\r\n    case LOAD_USER:{\r\n      //sets the recipe entries into state.recipes\r\n      return {...state, recipes:action.payload.message}\r\n    }\r\n\r\n    case VERIFY:{\r\n      console.log(action.payload.data);\r\n      return {...state}\r\n    }\r\n\r\n    case SIGNUP:{\r\n      //sets registered to true\r\n      if(action.payload.status===200){\r\n        return {...state, registered:true}\r\n      }\r\n      return {state}\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default recipes;"]},"metadata":{},"sourceType":"module"}