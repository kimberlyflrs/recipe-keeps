{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kim\\\\Documents\\\\GitHub\\\\recipe-keeps\\\\client\\\\src\\\\components\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport store from '../redux/store.js';\nimport axios from 'axios';\nimport { resume } from '../redux/actions';\n\nfunction getStatus() {\n  var token = localStorage.getItem('token');\n  axios.post('/api/auth/verify', {\n    token: token\n  }, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(result => {\n    console.log(result);\n\n    if (result.data.status === 200) {\n      return 200;\n    } else {\n      localStorage.removeItem('token');\n      return 401;\n    }\n  }).catch(err => {\n    localStorage.removeItem('token');\n    return 500;\n  });\n}\n\nfunction PrivateRoute({\n  component: Component,\n  ...rest\n}) {\n  console.log('state before resume() ' + store.getState());\n  store.dispatch(resume());\n  console.log('state after resume() ' + store.getState());\n  const token = store.getState().logged_in;\n  console.log(token);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => token ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/landing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default PrivateRoute;","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/recipe-keeps/client/src/components/PrivateRoute.js"],"names":["React","Route","Redirect","store","axios","resume","getStatus","token","localStorage","getItem","post","headers","then","result","console","log","data","status","removeItem","catch","err","PrivateRoute","component","Component","rest","getState","dispatch","logged_in","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,kBAArB;;AAGA,SAASC,SAAT,GAAqB;AACjB,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACEL,EAAAA,KAAK,CAACM,IAAN,CACE,kBADF,EAEE;AAAEH,IAAAA,KAAK,EAAEA;AAAT,GAFF,EAGE;AAAEI,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAAX,GAHF,EAIEC,IAJF,CAIOC,MAAM,IAAE;AAEbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAEA,QAAIA,MAAM,CAACG,IAAP,CAAYC,MAAZ,KAAuB,GAA3B,EAAgC;AAC5B,aAAO,GAAP;AACD,KAFH,MAES;AACLT,MAAAA,YAAY,CAACU,UAAb,CAAwB,OAAxB;AACA,aAAO,GAAP;AACD;AACJ,GAdD,EAcGC,KAdH,CAcSC,GAAG,IAAE;AACZZ,IAAAA,YAAY,CAACU,UAAb,CAAwB,OAAxB;AACA,WAAO,GAAP;AACD,GAjBD;AAmBL;;AAGD,SAASG,YAAT,CAAsB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAtB,EAAyD;AACrDV,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAA0BZ,KAAK,CAACsB,QAAN,EAAtC;AACAtB,EAAAA,KAAK,CAACuB,QAAN,CAAerB,MAAM,EAArB;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAyBZ,KAAK,CAACsB,QAAN,EAArC;AACA,QAAMlB,KAAK,GAAGJ,KAAK,CAACsB,QAAN,GAAiBE,SAA/B;AACAb,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACF,sBACE,oBAAC,KAAD,oBACMiB,IADN;AAEE,IAAA,MAAM,EAAEI,KAAK,IACXrB,KAAK,gBACH,oBAAC,SAAD,oBAAeqB,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADG,gBAGH,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAYD;;AAED,eAAeP,YAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport store from '../redux/store.js';\r\nimport axios from 'axios';\r\nimport {resume} from '../redux/actions';\r\n\r\n\r\nfunction getStatus() {\r\n    var token = localStorage.getItem('token');\r\n      axios.post(\r\n        '/api/auth/verify',\r\n        { token: token },\r\n        { headers: { 'Content-Type': 'application/json' } },\r\n      ).then(result=>{\r\n\r\n        console.log(result);\r\n\r\n        if (result.data.status === 200) {\r\n            return 200;\r\n          } else {\r\n            localStorage.removeItem('token');\r\n            return 401;\r\n          }\r\n      }).catch(err=>{\r\n        localStorage.removeItem('token');\r\n        return 500\r\n      })\r\n      \r\n}\r\n\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n    console.log('state before resume() '+ store.getState())    \r\n    store.dispatch(resume());\r\n    console.log('state after resume() '+ store.getState())\r\n    const token = store.getState().logged_in;\r\n    console.log(token);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        token ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/landing\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}