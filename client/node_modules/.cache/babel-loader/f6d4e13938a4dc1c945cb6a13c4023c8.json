{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kim\\\\Documents\\\\GitHub\\\\recipe-keeps\\\\client\\\\src\\\\components\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport store from '../redux/store.js';\nimport { resume, userInfo } from '../redux/actions';\nimport setAuth from '../utils/setAuth.js';\n\nasync function getUser() {\n  console.log('private route: userInfo()');\n  await store.dispatch(userInfo());\n  console.log(store.getState());\n\n  if (store.getState().logged_in) {\n    return true;\n  }\n\n  return false;\n}\n\nasync function resumeUser() {\n  console.log('private route: resume()');\n  await store.dispatch(resume());\n  console.log(store.getState());\n\n  if (store.getState().logged_in) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction PrivateRoute({\n  component: Component,\n  ...rest\n}) {\n  //this is okay since user mmay not know when token expired\n  const login = store.getState().logged_in;\n  console.log('private route: logged_in ' + login); //setAuth(localStorage.getItem('token'));\n\n  /*console.log('private route: resume()');\r\n  store.dispatch(resume());\r\n  console.log(store.getState());\r\n  const login = store.getState().logged_in;*/\n\n  /*console.log('private route: userInfo()');\r\n  store.dispatch(userInfo());\r\n  console.log(store.getState());*/\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => resumeUser() ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/landing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default PrivateRoute;","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/recipe-keeps/client/src/components/PrivateRoute.js"],"names":["React","Route","Redirect","store","resume","userInfo","setAuth","getUser","console","log","dispatch","getState","logged_in","resumeUser","PrivateRoute","component","Component","rest","login","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,kBAA/B;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,eAAeC,OAAf,GAAwB;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACC,QAAMN,KAAK,CAACO,QAAN,CAAeL,QAAQ,EAAvB,CAAN;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACQ,QAAN,EAAZ;;AACA,MAAGR,KAAK,CAACQ,QAAN,GAAiBC,SAApB,EAA8B;AAC5B,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACH;;AAED,eAAeC,UAAf,GAA2B;AACzBL,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACC,QAAMN,KAAK,CAACO,QAAN,CAAeN,MAAM,EAArB,CAAN;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACQ,QAAN,EAAZ;;AACA,MAAGR,KAAK,CAACQ,QAAN,GAAiBC,SAApB,EAA8B;AAC5B,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACF;;AAED,SAASE,YAAT,CAAsB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAtB,EAAyD;AACrD;AAEA,QAAMC,KAAK,GAAGf,KAAK,CAACQ,QAAN,GAAiBC,SAA/B;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAA4BS,KAAxC,EAJqD,CAKrD;;AAEA;;;;;AAKA;;;;AAGF,sBACE,oBAAC,KAAD,oBACMD,IADN;AAEE,IAAA,MAAM,EAAEE,KAAK,IACXN,UAAU,kBACR,oBAAC,SAAD,oBAAeM,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADQ,gBAGR,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAYD;;AAED,eAAeL,YAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport store from '../redux/store.js';\r\nimport {resume, userInfo} from '../redux/actions';\r\nimport setAuth from '../utils/setAuth.js';\r\n\r\nasync function getUser(){\r\n   console.log('private route: userInfo()');\r\n    await store.dispatch(userInfo());\r\n    console.log(store.getState());\r\n    if(store.getState().logged_in){\r\n      return true;\r\n    }\r\n    return false\r\n}\r\n\r\nasync function resumeUser(){\r\n  console.log('private route: resume()');\r\n   await store.dispatch(resume());\r\n   console.log(store.getState());\r\n   if(store.getState().logged_in){\r\n     return true;\r\n   }\r\n   return false\r\n}\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n    //this is okay since user mmay not know when token expired\r\n\r\n    const login = store.getState().logged_in;\r\n    console.log('private route: logged_in '+login);\r\n    //setAuth(localStorage.getItem('token'));\r\n\r\n    /*console.log('private route: resume()');\r\n    store.dispatch(resume());\r\n    console.log(store.getState());\r\n    const login = store.getState().logged_in;*/\r\n\r\n    /*console.log('private route: userInfo()');\r\n    store.dispatch(userInfo());\r\n    console.log(store.getState());*/\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        resumeUser() ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/landing\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}